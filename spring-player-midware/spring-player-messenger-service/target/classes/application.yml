server:
  port: 10080

spring:
  application:
    name: yl-platform-messaging-service
    swagger:
      enabled: true
  profiles:
    active: email
  redis:
    port: 6379
    host: localhost
    password: 123456
  rabbitmq: 
    host: 192.168.1.212
    port: 5672
    username: guest
    password: guest
    listener:
      simple:
        concurrency: 5 
        max-concurrency: 10
        acknowledge-mode: manual
        prefetch: 1
    publisher-confirm-type: correlated
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    url: jdbc:mysql://localhost:3306/test?serverTimezone=UTC&useSSL=false
    username: fengy
    password: 123456
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      minimum-idle: 1
      idle-timeout: 180000
      maximum-pool-size: 20
      auto-commit: true
      max-lifetime: 1800000
      connection-timeout: 30000
  mail:
    host: smtphz.qiye.163.com
    username: fengyan@jtexpress.com
    password: D1KuVvypJar8HAbV
    default-encoding: UTF-8
  kafka:
    bootstrap-servers: 192.168.12.51:9092,192.168.12.52:9092,192.168.12.53:9092 # kafka集群信息
    producer: # 生产者配置
      retries: 3 # 设置大于0的值，则客户端会将发送失败的记录重新发送
      batch-size: 16384 #16K
      buffer-memory: 33554432 #32M
      acks: 1
      # 指定消息key和消息体的编解码方式
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: com.github.paganini2008.springplayer.messenger.kafka.MessagingEntitySerializer
    consumer:
      group-id: testGroup # 消费者组
      enable-auto-commit: false # 关闭自动提交
      auto-offset-reset: latest # 当各分区下有已提交的offset时，从提交的offset开始消费；无提交的offset时，从头开始消费
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: com.github.paganini2008.springplayer.messenger.kafka.MessagingEntityDeserializer
eureka:
  client:
    serviceUrl:
      defaultZone: http://fred-pc:7000/eureka
    fetch-registry: true
    registry-fetch-interval-seconds: 8
  instance:
    lease-renewal-interval-in-seconds: 4
    lease-expiration-duration-in-seconds: 12
    
security:
  oauth2:
    client:
      client-id: test
      client-secret: 123456
    resource:
      token-info-uri: http://SPRING-PLAYER-OAUTH-SERVICE:5000/oauth/check_token
      user-info-uri: http://SPRING-PLAYER-OAUTH-SERVICE:5000/user
      
yl:
  platform:
    messaging:
      store: redis


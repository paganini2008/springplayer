2022-01-25 15:05:45 [INFO ] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.7.Final
2022-01-25 15:05:47 [INFO ] c.g.p.s.upms.UpmsApplication - No active profile set, falling back to default profiles: default
2022-01-25 15:05:47 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-01-25 15:05:47 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-01-25 15:05:47 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 25ms. Found 0 Redis repository interfaces.
2022-01-25 15:05:48 [WARN ] o.s.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2022-01-25 15:05:48 [INFO ] o.s.cloud.context.scope.GenericScope - BeanFactory id=179e77f8-092e-38dc-a319-ce434fbd3015
2022-01-25 15:05:48 [INFO ] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.github.paganini2008.springplayer.redis.RedisPubSubAutoConfiguration' of type [com.github.paganini2008.springplayer.redis.RedisPubSubAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-01-25 15:05:48 [WARN ] io.undertow.websockets.jsr - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2022-01-25 15:05:49 [INFO ] io.undertow.servlet - Initializing Spring embedded WebApplicationContext
2022-01-25 15:05:49 [INFO ] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1995 ms
2022-01-25 15:05:49 [WARN ] c.n.c.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2022-01-25 15:05:49 [INFO ] c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-01-25 15:05:49 [INFO ] c.n.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@31228d83
2022-01-25 15:05:50 [WARN ] c.n.c.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2022-01-25 15:05:50 [INFO ] c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-01-25 15:05:51 [INFO ] o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-01-25 15:05:52 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 15:05:54 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 15:05:54 [INFO ] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
2022-01-25 15:05:54 [WARN ] o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2022-01-25 15:05:54 [INFO ] o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-01-25 15:05:54 [INFO ] o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2022-01-25 15:05:54 [INFO ] c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2022-01-25 15:05:54 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2022-01-25 15:05:54 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2022-01-25 15:05:54 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2022-01-25 15:05:54 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2022-01-25 15:05:55 [INFO ] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2022-01-25 15:05:55 [INFO ] c.netflix.discovery.DiscoveryClient - Disable delta property : false
2022-01-25 15:05:55 [INFO ] c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2022-01-25 15:05:55 [INFO ] c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2022-01-25 15:05:55 [INFO ] c.netflix.discovery.DiscoveryClient - Application is null : false
2022-01-25 15:05:55 [INFO ] c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2022-01-25 15:05:55 [INFO ] c.netflix.discovery.DiscoveryClient - Application version is -1: true
2022-01-25 15:05:55 [INFO ] c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2022-01-25 15:05:55 [INFO ] c.netflix.discovery.DiscoveryClient - The response status is 200
2022-01-25 15:05:55 [INFO ] c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 4
2022-01-25 15:05:55 [INFO ] c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2022-01-25 15:05:55 [INFO ] c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1643094355488 with initial instances count: 0
2022-01-25 15:05:55 [INFO ] o.s.c.n.e.s.EurekaServiceRegistry - Registering application SPRING-PLAYER-UPMS-SERVICE with eureka with status UP
2022-01-25 15:05:55 [INFO ] c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1643094355492, current=UP, previous=STARTING]
2022-01-25 15:05:55 [INFO ] c.netflix.discovery.DiscoveryClient - DiscoveryClient_SPRING-PLAYER-UPMS-SERVICE/localhost:spring-player-upms-service:5050: registering service...
2022-01-25 15:05:55 [INFO ] io.undertow - starting server: Undertow - 2.1.7.Final
2022-01-25 15:05:55 [INFO ] org.xnio - XNIO version 3.8.0.Final
2022-01-25 15:05:55 [INFO ] org.xnio.nio - XNIO NIO Implementation Version 3.8.0.Final
2022-01-25 15:05:55 [INFO ] c.netflix.discovery.DiscoveryClient - DiscoveryClient_SPRING-PLAYER-UPMS-SERVICE/localhost:spring-player-upms-service:5050 - registration status: 204
2022-01-25 15:05:55 [INFO ] org.jboss.threads - JBoss Threads version 3.1.0.Final
2022-01-25 15:05:55 [INFO ] o.s.b.w.e.undertow.UndertowWebServer - Undertow started on port(s) 5050 (http)
2022-01-25 15:05:55 [INFO ] o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 5050
2022-01-25 15:05:56 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 15:05:56 [INFO ] c.g.p.s.upms.UpmsApplication - Started UpmsApplication in 13.094 seconds (JVM running for 13.878)
2022-01-25 15:06:03 [INFO ] c.netflix.discovery.DiscoveryClient - Disable delta property : false
2022-01-25 15:06:03 [INFO ] c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2022-01-25 15:06:03 [INFO ] c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2022-01-25 15:06:03 [INFO ] c.netflix.discovery.DiscoveryClient - Application is null : false
2022-01-25 15:06:03 [INFO ] c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2022-01-25 15:06:03 [INFO ] c.netflix.discovery.DiscoveryClient - Application version is -1: false
2022-01-25 15:06:03 [INFO ] c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2022-01-25 15:06:03 [INFO ] c.netflix.discovery.DiscoveryClient - The response status is 200
2022-01-25 15:06:23 [INFO ] io.undertow.servlet - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-01-25 15:06:23 [INFO ] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-01-25 15:06:23 [INFO ] o.s.web.servlet.DispatcherServlet - Completed initialization in 10 ms
2022-01-25 15:06:23 [INFO ] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2022-01-25 15:06:23 [INFO ] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2022-01-25 15:06:23 [WARN ] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Failure in @ExceptionHandler com.github.paganini2008.springplayer.webmvc.GlobalExceptionHandler#handleException(HttpServletRequest, Exception)
java.lang.NullPointerException: null
	at java.util.LinkedList.addAll(LinkedList.java:408)
	at java.util.LinkedList.addAll(LinkedList.java:387)
	at org.springframework.util.MultiValueMapAdapter.addAll(MultiValueMapAdapter.java:69)
	at org.springframework.http.HttpHeaders.addAll(HttpHeaders.java:1647)
	at com.github.paganini2008.springplayer.webmvc.monitor.ApiCallUtils.setApiHeaders(ApiCallUtils.java:71)
	at com.github.paganini2008.springplayer.webmvc.ClientResponsePreHandler.beforeBodyWrite(ClientResponsePreHandler.java:62)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyAdviceChain.processBody(RequestResponseBodyAdviceChain.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyAdviceChain.beforeBodyWrite(RequestResponseBodyAdviceChain.java:116)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:268)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:219)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:82)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:123)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:407)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:141)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1300)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1111)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:517)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:584)
	at io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:74)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:129)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at com.github.paganini2008.springplayer.webmvc.HttpHeadersContextHolder.doFilter(HttpHeadersContextHolder.java:107)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:84)
	at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
	at io.undertow.servlet.handlers.ServletChain$1.handleRequest(ServletChain.java:68)
	at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
	at io.undertow.servlet.handlers.RedirectDirHandler.handleRequest(RedirectDirHandler.java:68)
	at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:111)
	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
	at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)
	at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)
	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:269)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$100(ServletInitialHandler.java:78)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:133)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:130)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:249)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:78)
	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:99)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:390)
	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:836)
	at org.jboss.threads.ContextClassLoaderSavingRunnable.run(ContextClassLoaderSavingRunnable.java:35)
	at org.jboss.threads.EnhancedQueueExecutor.safeRun(EnhancedQueueExecutor.java:2019)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.doRunTask(EnhancedQueueExecutor.java:1558)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1423)
	at java.lang.Thread.run(Thread.java:748)
2022-01-25 15:06:23 [WARN ] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Failure in @ExceptionHandler com.github.paganini2008.springplayer.webmvc.GlobalExceptionHandler#handleException(HttpServletRequest, Exception)
java.lang.NullPointerException: null
	at java.util.LinkedList.addAll(LinkedList.java:408)
	at java.util.LinkedList.addAll(LinkedList.java:387)
	at org.springframework.util.MultiValueMapAdapter.addAll(MultiValueMapAdapter.java:69)
	at org.springframework.http.HttpHeaders.addAll(HttpHeaders.java:1647)
	at com.github.paganini2008.springplayer.webmvc.monitor.ApiCallUtils.setApiHeaders(ApiCallUtils.java:71)
	at com.github.paganini2008.springplayer.webmvc.ClientResponsePreHandler.beforeBodyWrite(ClientResponsePreHandler.java:62)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyAdviceChain.processBody(RequestResponseBodyAdviceChain.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyAdviceChain.beforeBodyWrite(RequestResponseBodyAdviceChain.java:116)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:268)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:219)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:82)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:123)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:407)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:141)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1300)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1111)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:517)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:584)
	at io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:74)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:129)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:84)
	at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
	at io.undertow.servlet.handlers.ServletChain$1.handleRequest(ServletChain.java:68)
	at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
	at io.undertow.servlet.handlers.RedirectDirHandler.handleRequest(RedirectDirHandler.java:68)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:251)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchToPath(ServletInitialHandler.java:186)
	at io.undertow.servlet.spec.RequestDispatcherImpl.error(RequestDispatcherImpl.java:501)
	at io.undertow.servlet.spec.RequestDispatcherImpl.error(RequestDispatcherImpl.java:427)
	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:308)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$100(ServletInitialHandler.java:78)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:133)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:130)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:249)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:78)
	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:99)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:390)
	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:836)
	at org.jboss.threads.ContextClassLoaderSavingRunnable.run(ContextClassLoaderSavingRunnable.java:35)
	at org.jboss.threads.EnhancedQueueExecutor.safeRun(EnhancedQueueExecutor.java:2019)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.doRunTask(EnhancedQueueExecutor.java:1558)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1423)
	at java.lang.Thread.run(Thread.java:748)
2022-01-25 15:07:38 [WARN ] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Failure in @ExceptionHandler com.github.paganini2008.springplayer.webmvc.GlobalExceptionHandler#handleException(HttpServletRequest, Exception)
java.lang.NullPointerException: null
	at java.util.LinkedList.addAll(LinkedList.java:408)
	at java.util.LinkedList.addAll(LinkedList.java:387)
	at org.springframework.util.MultiValueMapAdapter.addAll(MultiValueMapAdapter.java:69)
	at org.springframework.http.HttpHeaders.addAll(HttpHeaders.java:1647)
	at com.github.paganini2008.springplayer.webmvc.monitor.ApiCallUtils.setApiHeaders(ApiCallUtils.java:71)
	at com.github.paganini2008.springplayer.webmvc.ClientResponsePreHandler.beforeBodyWrite(ClientResponsePreHandler.java:62)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyAdviceChain.processBody(RequestResponseBodyAdviceChain.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyAdviceChain.beforeBodyWrite(RequestResponseBodyAdviceChain.java:116)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:268)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:219)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:82)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:123)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:407)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:141)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1300)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1111)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:517)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:584)
	at io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:74)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:129)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at com.github.paganini2008.springplayer.webmvc.HttpHeadersContextHolder.doFilter(HttpHeadersContextHolder.java:107)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:84)
	at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
	at io.undertow.servlet.handlers.ServletChain$1.handleRequest(ServletChain.java:68)
	at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
	at io.undertow.servlet.handlers.RedirectDirHandler.handleRequest(RedirectDirHandler.java:68)
	at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:111)
	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
	at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)
	at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)
	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:269)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$100(ServletInitialHandler.java:78)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:133)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:130)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:249)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:78)
	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:99)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:390)
	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:836)
	at org.jboss.threads.ContextClassLoaderSavingRunnable.run(ContextClassLoaderSavingRunnable.java:35)
	at org.jboss.threads.EnhancedQueueExecutor.safeRun(EnhancedQueueExecutor.java:2019)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.doRunTask(EnhancedQueueExecutor.java:1558)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1449)
	at java.lang.Thread.run(Thread.java:748)
2022-01-25 15:07:42 [WARN ] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Failure in @ExceptionHandler com.github.paganini2008.springplayer.webmvc.GlobalExceptionHandler#handleException(HttpServletRequest, Exception)
java.lang.NullPointerException: null
	at java.util.LinkedList.addAll(LinkedList.java:408)
	at java.util.LinkedList.addAll(LinkedList.java:387)
	at org.springframework.util.MultiValueMapAdapter.addAll(MultiValueMapAdapter.java:69)
	at org.springframework.http.HttpHeaders.addAll(HttpHeaders.java:1647)
	at com.github.paganini2008.springplayer.webmvc.monitor.ApiCallUtils.setApiHeaders(ApiCallUtils.java:71)
	at com.github.paganini2008.springplayer.webmvc.ClientResponsePreHandler.beforeBodyWrite(ClientResponsePreHandler.java:62)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyAdviceChain.processBody(RequestResponseBodyAdviceChain.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyAdviceChain.beforeBodyWrite(RequestResponseBodyAdviceChain.java:116)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:268)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:219)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:82)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:123)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:407)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:141)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1300)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1111)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:517)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:584)
	at io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:74)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:129)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:84)
	at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
	at io.undertow.servlet.handlers.ServletChain$1.handleRequest(ServletChain.java:68)
	at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
	at io.undertow.servlet.handlers.RedirectDirHandler.handleRequest(RedirectDirHandler.java:68)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:251)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchToPath(ServletInitialHandler.java:186)
	at io.undertow.servlet.spec.RequestDispatcherImpl.error(RequestDispatcherImpl.java:501)
	at io.undertow.servlet.spec.RequestDispatcherImpl.error(RequestDispatcherImpl.java:427)
	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:308)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$100(ServletInitialHandler.java:78)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:133)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:130)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:249)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:78)
	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:99)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:390)
	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:836)
	at org.jboss.threads.ContextClassLoaderSavingRunnable.run(ContextClassLoaderSavingRunnable.java:35)
	at org.jboss.threads.EnhancedQueueExecutor.safeRun(EnhancedQueueExecutor.java:2019)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.doRunTask(EnhancedQueueExecutor.java:1558)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1449)
	at java.lang.Thread.run(Thread.java:748)
2022-01-25 15:08:26 [WARN ] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Failure in @ExceptionHandler com.github.paganini2008.springplayer.webmvc.GlobalExceptionHandler#handleException(HttpServletRequest, Exception)
java.lang.NullPointerException: null
	at java.util.LinkedList.addAll(LinkedList.java:408)
	at java.util.LinkedList.addAll(LinkedList.java:387)
	at org.springframework.util.MultiValueMapAdapter.addAll(MultiValueMapAdapter.java:69)
	at org.springframework.http.HttpHeaders.addAll(HttpHeaders.java:1647)
	at com.github.paganini2008.springplayer.webmvc.monitor.ApiCallUtils.setApiHeaders(ApiCallUtils.java:71)
	at com.github.paganini2008.springplayer.webmvc.ClientResponsePreHandler.beforeBodyWrite(ClientResponsePreHandler.java:62)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyAdviceChain.processBody(RequestResponseBodyAdviceChain.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyAdviceChain.beforeBodyWrite(RequestResponseBodyAdviceChain.java:116)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:268)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:219)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:82)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:123)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:407)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:141)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1300)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1111)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:517)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:584)
	at io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:74)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:129)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at com.github.paganini2008.springplayer.webmvc.HttpHeadersContextHolder.doFilter(HttpHeadersContextHolder.java:107)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:84)
	at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
	at io.undertow.servlet.handlers.ServletChain$1.handleRequest(ServletChain.java:68)
	at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
	at io.undertow.servlet.handlers.RedirectDirHandler.handleRequest(RedirectDirHandler.java:68)
	at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:111)
	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
	at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)
	at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)
	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:269)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$100(ServletInitialHandler.java:78)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:133)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:130)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:249)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:78)
	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:99)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:390)
	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:836)
	at org.jboss.threads.ContextClassLoaderSavingRunnable.run(ContextClassLoaderSavingRunnable.java:35)
	at org.jboss.threads.EnhancedQueueExecutor.safeRun(EnhancedQueueExecutor.java:2019)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.doRunTask(EnhancedQueueExecutor.java:1558)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1449)
	at java.lang.Thread.run(Thread.java:748)
2022-01-25 15:08:30 [WARN ] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Failure in @ExceptionHandler com.github.paganini2008.springplayer.webmvc.GlobalExceptionHandler#handleException(HttpServletRequest, Exception)
java.lang.NullPointerException: null
	at java.util.LinkedList.addAll(LinkedList.java:408)
	at java.util.LinkedList.addAll(LinkedList.java:387)
	at org.springframework.util.MultiValueMapAdapter.addAll(MultiValueMapAdapter.java:69)
	at org.springframework.http.HttpHeaders.addAll(HttpHeaders.java:1647)
	at com.github.paganini2008.springplayer.webmvc.monitor.ApiCallUtils.setApiHeaders(ApiCallUtils.java:71)
	at com.github.paganini2008.springplayer.webmvc.ClientResponsePreHandler.beforeBodyWrite(ClientResponsePreHandler.java:62)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyAdviceChain.processBody(RequestResponseBodyAdviceChain.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyAdviceChain.beforeBodyWrite(RequestResponseBodyAdviceChain.java:116)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:268)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:219)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:82)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:123)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:407)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:141)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1300)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1111)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:517)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:584)
	at io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:74)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:129)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:84)
	at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
	at io.undertow.servlet.handlers.ServletChain$1.handleRequest(ServletChain.java:68)
	at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
	at io.undertow.servlet.handlers.RedirectDirHandler.handleRequest(RedirectDirHandler.java:68)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:251)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchToPath(ServletInitialHandler.java:186)
	at io.undertow.servlet.spec.RequestDispatcherImpl.error(RequestDispatcherImpl.java:501)
	at io.undertow.servlet.spec.RequestDispatcherImpl.error(RequestDispatcherImpl.java:427)
	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:308)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$100(ServletInitialHandler.java:78)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:133)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:130)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:249)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:78)
	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:99)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:390)
	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:836)
	at org.jboss.threads.ContextClassLoaderSavingRunnable.run(ContextClassLoaderSavingRunnable.java:35)
	at org.jboss.threads.EnhancedQueueExecutor.safeRun(EnhancedQueueExecutor.java:2019)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.doRunTask(EnhancedQueueExecutor.java:1558)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1449)
	at java.lang.Thread.run(Thread.java:748)
2022-01-25 15:13:45 [INFO ] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.7.Final
2022-01-25 15:13:47 [INFO ] c.g.p.s.upms.UpmsApplication - No active profile set, falling back to default profiles: default
2022-01-25 15:13:48 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-01-25 15:13:48 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-01-25 15:13:48 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 24ms. Found 0 Redis repository interfaces.
2022-01-25 15:13:48 [WARN ] o.s.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2022-01-25 15:13:48 [INFO ] o.s.cloud.context.scope.GenericScope - BeanFactory id=179e77f8-092e-38dc-a319-ce434fbd3015
2022-01-25 15:13:49 [INFO ] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.github.paganini2008.springplayer.redis.RedisPubSubAutoConfiguration' of type [com.github.paganini2008.springplayer.redis.RedisPubSubAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-01-25 15:13:49 [WARN ] io.undertow.websockets.jsr - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2022-01-25 15:13:49 [INFO ] io.undertow.servlet - Initializing Spring embedded WebApplicationContext
2022-01-25 15:13:49 [INFO ] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1998 ms
2022-01-25 15:13:49 [WARN ] c.n.c.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2022-01-25 15:13:49 [INFO ] c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-01-25 15:13:49 [INFO ] c.n.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@6684f7f2
2022-01-25 15:13:51 [WARN ] c.n.c.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2022-01-25 15:13:51 [INFO ] c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-01-25 15:13:51 [INFO ] o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-01-25 15:13:53 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 15:13:54 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 15:13:54 [INFO ] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
2022-01-25 15:13:54 [WARN ] o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2022-01-25 15:13:55 [INFO ] o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-01-25 15:13:55 [INFO ] o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2022-01-25 15:13:55 [INFO ] c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2022-01-25 15:13:55 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2022-01-25 15:13:55 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2022-01-25 15:13:55 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2022-01-25 15:13:55 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2022-01-25 15:13:55 [INFO ] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2022-01-25 15:13:55 [INFO ] c.netflix.discovery.DiscoveryClient - Disable delta property : false
2022-01-25 15:13:55 [INFO ] c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2022-01-25 15:13:55 [INFO ] c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2022-01-25 15:13:55 [INFO ] c.netflix.discovery.DiscoveryClient - Application is null : false
2022-01-25 15:13:55 [INFO ] c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2022-01-25 15:13:55 [INFO ] c.netflix.discovery.DiscoveryClient - Application version is -1: true
2022-01-25 15:13:55 [INFO ] c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2022-01-25 15:13:55 [INFO ] c.netflix.discovery.DiscoveryClient - The response status is 200
2022-01-25 15:13:55 [INFO ] c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 4
2022-01-25 15:13:55 [INFO ] c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2022-01-25 15:13:55 [INFO ] c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1643094835963 with initial instances count: 0
2022-01-25 15:13:55 [INFO ] o.s.c.n.e.s.EurekaServiceRegistry - Registering application SPRING-PLAYER-UPMS-SERVICE with eureka with status UP
2022-01-25 15:13:55 [INFO ] c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1643094835967, current=UP, previous=STARTING]
2022-01-25 15:13:55 [INFO ] c.netflix.discovery.DiscoveryClient - DiscoveryClient_SPRING-PLAYER-UPMS-SERVICE/localhost:spring-player-upms-service:5050: registering service...
2022-01-25 15:13:55 [INFO ] io.undertow - starting server: Undertow - 2.1.7.Final
2022-01-25 15:13:55 [INFO ] org.xnio - XNIO version 3.8.0.Final
2022-01-25 15:13:56 [INFO ] org.xnio.nio - XNIO NIO Implementation Version 3.8.0.Final
2022-01-25 15:13:56 [INFO ] c.netflix.discovery.DiscoveryClient - DiscoveryClient_SPRING-PLAYER-UPMS-SERVICE/localhost:spring-player-upms-service:5050 - registration status: 204
2022-01-25 15:13:56 [INFO ] org.jboss.threads - JBoss Threads version 3.1.0.Final
2022-01-25 15:13:56 [INFO ] o.s.b.w.e.undertow.UndertowWebServer - Undertow started on port(s) 5050 (http)
2022-01-25 15:13:56 [INFO ] o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 5050
2022-01-25 15:13:57 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 15:13:57 [INFO ] c.g.p.s.upms.UpmsApplication - Started UpmsApplication in 12.876 seconds (JVM running for 13.613)
2022-01-25 15:14:00 [INFO ] io.undertow.servlet - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-01-25 15:14:00 [INFO ] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-01-25 15:14:00 [INFO ] o.s.web.servlet.DispatcherServlet - Completed initialization in 8 ms
2022-01-25 15:14:00 [INFO ] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2022-01-25 15:14:00 [INFO ] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2022-01-25 15:14:03 [INFO ] c.netflix.discovery.DiscoveryClient - Disable delta property : false
2022-01-25 15:14:03 [INFO ] c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2022-01-25 15:14:03 [INFO ] c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2022-01-25 15:14:03 [INFO ] c.netflix.discovery.DiscoveryClient - Application is null : false
2022-01-25 15:14:03 [INFO ] c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2022-01-25 15:14:03 [INFO ] c.netflix.discovery.DiscoveryClient - Application version is -1: false
2022-01-25 15:14:03 [INFO ] c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2022-01-25 15:14:04 [INFO ] c.netflix.discovery.DiscoveryClient - The response status is 200
2022-01-25 15:34:26 [INFO ] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.7.Final
2022-01-25 15:34:28 [INFO ] c.g.p.s.upms.UpmsApplication - No active profile set, falling back to default profiles: default
2022-01-25 15:34:29 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-01-25 15:34:29 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-01-25 15:34:29 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 25ms. Found 0 Redis repository interfaces.
2022-01-25 15:34:29 [WARN ] o.s.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2022-01-25 15:34:29 [INFO ] o.s.cloud.context.scope.GenericScope - BeanFactory id=179e77f8-092e-38dc-a319-ce434fbd3015
2022-01-25 15:34:29 [INFO ] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.github.paganini2008.springplayer.redis.RedisPubSubAutoConfiguration' of type [com.github.paganini2008.springplayer.redis.RedisPubSubAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-01-25 15:34:30 [WARN ] io.undertow.websockets.jsr - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2022-01-25 15:34:30 [INFO ] io.undertow.servlet - Initializing Spring embedded WebApplicationContext
2022-01-25 15:34:30 [INFO ] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1925 ms
2022-01-25 15:34:30 [WARN ] c.n.c.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2022-01-25 15:34:30 [INFO ] c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-01-25 15:34:30 [INFO ] c.n.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@d504137
2022-01-25 15:34:32 [WARN ] c.n.c.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2022-01-25 15:34:32 [INFO ] c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-01-25 15:34:32 [INFO ] o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-01-25 15:34:34 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 15:34:35 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 15:34:35 [INFO ] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
2022-01-25 15:34:35 [WARN ] o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2022-01-25 15:34:35 [INFO ] o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-01-25 15:34:35 [INFO ] o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2022-01-25 15:34:35 [INFO ] c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2022-01-25 15:34:36 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2022-01-25 15:34:36 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2022-01-25 15:34:36 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2022-01-25 15:34:36 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2022-01-25 15:34:36 [INFO ] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2022-01-25 15:34:36 [INFO ] c.netflix.discovery.DiscoveryClient - Disable delta property : false
2022-01-25 15:34:36 [INFO ] c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2022-01-25 15:34:36 [INFO ] c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2022-01-25 15:34:36 [INFO ] c.netflix.discovery.DiscoveryClient - Application is null : false
2022-01-25 15:34:36 [INFO ] c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2022-01-25 15:34:36 [INFO ] c.netflix.discovery.DiscoveryClient - Application version is -1: true
2022-01-25 15:34:36 [INFO ] c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2022-01-25 15:34:36 [INFO ] c.netflix.discovery.DiscoveryClient - The response status is 200
2022-01-25 15:34:36 [INFO ] c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 4
2022-01-25 15:34:36 [INFO ] c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2022-01-25 15:34:36 [INFO ] c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1643096076655 with initial instances count: 0
2022-01-25 15:34:36 [INFO ] o.s.c.n.e.s.EurekaServiceRegistry - Registering application SPRING-PLAYER-UPMS-SERVICE with eureka with status UP
2022-01-25 15:34:36 [INFO ] c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1643096076658, current=UP, previous=STARTING]
2022-01-25 15:34:36 [INFO ] c.netflix.discovery.DiscoveryClient - DiscoveryClient_SPRING-PLAYER-UPMS-SERVICE/localhost:spring-player-upms-service:5050: registering service...
2022-01-25 15:34:36 [INFO ] io.undertow - starting server: Undertow - 2.1.7.Final
2022-01-25 15:34:36 [INFO ] org.xnio - XNIO version 3.8.0.Final
2022-01-25 15:34:36 [INFO ] org.xnio.nio - XNIO NIO Implementation Version 3.8.0.Final
2022-01-25 15:34:36 [INFO ] c.netflix.discovery.DiscoveryClient - DiscoveryClient_SPRING-PLAYER-UPMS-SERVICE/localhost:spring-player-upms-service:5050 - registration status: 204
2022-01-25 15:34:36 [INFO ] org.jboss.threads - JBoss Threads version 3.1.0.Final
2022-01-25 15:34:36 [INFO ] o.s.b.w.e.undertow.UndertowWebServer - Undertow started on port(s) 5050 (http)
2022-01-25 15:34:36 [INFO ] o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 5050
2022-01-25 15:34:37 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 15:34:37 [INFO ] c.g.p.s.upms.UpmsApplication - Started UpmsApplication in 12.849 seconds (JVM running for 13.58)
2022-01-25 15:34:42 [INFO ] io.undertow.servlet - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-01-25 15:34:42 [INFO ] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-01-25 15:34:42 [INFO ] o.s.web.servlet.DispatcherServlet - Completed initialization in 8 ms
2022-01-25 15:34:42 [INFO ] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2022-01-25 15:34:42 [INFO ] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2022-01-25 15:34:44 [INFO ] c.netflix.discovery.DiscoveryClient - Disable delta property : false
2022-01-25 15:34:44 [INFO ] c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2022-01-25 15:34:44 [INFO ] c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2022-01-25 15:34:44 [INFO ] c.netflix.discovery.DiscoveryClient - Application is null : false
2022-01-25 15:34:44 [INFO ] c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2022-01-25 15:34:44 [INFO ] c.netflix.discovery.DiscoveryClient - Application version is -1: false
2022-01-25 15:34:44 [INFO ] c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2022-01-25 15:34:44 [INFO ] c.netflix.discovery.DiscoveryClient - The response status is 200
2022-01-25 15:39:36 [INFO ] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2022-01-25 15:44:36 [INFO ] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2022-01-25 15:48:10 [INFO ] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.7.Final
2022-01-25 15:48:11 [INFO ] c.g.p.s.upms.UpmsApplication - No active profile set, falling back to default profiles: default
2022-01-25 15:48:12 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-01-25 15:48:12 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-01-25 15:48:12 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 34ms. Found 0 Redis repository interfaces.
2022-01-25 15:48:13 [WARN ] o.s.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2022-01-25 15:48:13 [INFO ] o.s.cloud.context.scope.GenericScope - BeanFactory id=179e77f8-092e-38dc-a319-ce434fbd3015
2022-01-25 15:48:13 [INFO ] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.github.paganini2008.springplayer.redis.RedisPubSubAutoConfiguration' of type [com.github.paganini2008.springplayer.redis.RedisPubSubAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-01-25 15:48:13 [WARN ] io.undertow.websockets.jsr - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2022-01-25 15:48:13 [INFO ] io.undertow.servlet - Initializing Spring embedded WebApplicationContext
2022-01-25 15:48:13 [INFO ] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2019 ms
2022-01-25 15:48:14 [WARN ] c.n.c.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2022-01-25 15:48:14 [INFO ] c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-01-25 15:48:14 [INFO ] c.n.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@2326180c
2022-01-25 15:48:15 [WARN ] c.n.c.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2022-01-25 15:48:15 [INFO ] c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-01-25 15:48:16 [INFO ] o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-01-25 15:48:17 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 15:48:19 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 15:48:19 [INFO ] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
2022-01-25 15:48:19 [WARN ] o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2022-01-25 15:48:19 [INFO ] o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-01-25 15:48:19 [INFO ] o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2022-01-25 15:48:19 [INFO ] c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2022-01-25 15:48:19 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2022-01-25 15:48:19 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2022-01-25 15:48:19 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2022-01-25 15:48:19 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2022-01-25 15:48:19 [INFO ] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2022-01-25 15:48:19 [INFO ] c.netflix.discovery.DiscoveryClient - Disable delta property : false
2022-01-25 15:48:19 [INFO ] c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2022-01-25 15:48:19 [INFO ] c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2022-01-25 15:48:19 [INFO ] c.netflix.discovery.DiscoveryClient - Application is null : false
2022-01-25 15:48:19 [INFO ] c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2022-01-25 15:48:19 [INFO ] c.netflix.discovery.DiscoveryClient - Application version is -1: true
2022-01-25 15:48:19 [INFO ] c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2022-01-25 15:48:20 [INFO ] c.netflix.discovery.DiscoveryClient - The response status is 200
2022-01-25 15:48:20 [INFO ] c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 4
2022-01-25 15:48:20 [INFO ] c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2022-01-25 15:48:20 [INFO ] c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1643096900113 with initial instances count: 0
2022-01-25 15:48:20 [INFO ] o.s.c.n.e.s.EurekaServiceRegistry - Registering application SPRING-PLAYER-UPMS-SERVICE with eureka with status UP
2022-01-25 15:48:20 [INFO ] c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1643096900116, current=UP, previous=STARTING]
2022-01-25 15:48:20 [INFO ] c.netflix.discovery.DiscoveryClient - DiscoveryClient_SPRING-PLAYER-UPMS-SERVICE/localhost:spring-player-upms-service:5050: registering service...
2022-01-25 15:48:20 [INFO ] io.undertow - starting server: Undertow - 2.1.7.Final
2022-01-25 15:48:20 [INFO ] org.xnio - XNIO version 3.8.0.Final
2022-01-25 15:48:20 [INFO ] org.xnio.nio - XNIO NIO Implementation Version 3.8.0.Final
2022-01-25 15:48:20 [INFO ] c.netflix.discovery.DiscoveryClient - DiscoveryClient_SPRING-PLAYER-UPMS-SERVICE/localhost:spring-player-upms-service:5050 - registration status: 204
2022-01-25 15:48:20 [INFO ] org.jboss.threads - JBoss Threads version 3.1.0.Final
2022-01-25 15:48:20 [INFO ] o.s.b.w.e.undertow.UndertowWebServer - Undertow started on port(s) 5050 (http)
2022-01-25 15:48:20 [INFO ] o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 5050
2022-01-25 15:48:21 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 15:48:21 [INFO ] c.g.p.s.upms.UpmsApplication - Started UpmsApplication in 12.769 seconds (JVM running for 13.51)
2022-01-25 15:48:28 [INFO ] c.netflix.discovery.DiscoveryClient - Disable delta property : false
2022-01-25 15:48:28 [INFO ] c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2022-01-25 15:48:28 [INFO ] c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2022-01-25 15:48:28 [INFO ] c.netflix.discovery.DiscoveryClient - Application is null : false
2022-01-25 15:48:28 [INFO ] c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2022-01-25 15:48:28 [INFO ] c.netflix.discovery.DiscoveryClient - Application version is -1: false
2022-01-25 15:48:28 [INFO ] c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2022-01-25 15:48:28 [INFO ] c.netflix.discovery.DiscoveryClient - The response status is 200
2022-01-25 15:48:57 [INFO ] io.undertow.servlet - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-01-25 15:48:57 [INFO ] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-01-25 15:48:57 [INFO ] o.s.web.servlet.DispatcherServlet - Completed initialization in 10 ms
2022-01-25 15:48:58 [INFO ] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2022-01-25 15:48:58 [INFO ] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2022-01-25 15:54:28 [INFO ] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.7.Final
2022-01-25 15:54:30 [INFO ] c.g.p.s.upms.UpmsApplication - No active profile set, falling back to default profiles: default
2022-01-25 15:54:31 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-01-25 15:54:31 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-01-25 15:54:31 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 20ms. Found 0 Redis repository interfaces.
2022-01-25 15:54:31 [WARN ] o.s.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2022-01-25 15:54:31 [INFO ] o.s.cloud.context.scope.GenericScope - BeanFactory id=179e77f8-092e-38dc-a319-ce434fbd3015
2022-01-25 15:54:31 [INFO ] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.github.paganini2008.springplayer.redis.RedisPubSubAutoConfiguration' of type [com.github.paganini2008.springplayer.redis.RedisPubSubAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-01-25 15:54:32 [WARN ] io.undertow.websockets.jsr - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2022-01-25 15:54:32 [INFO ] io.undertow.servlet - Initializing Spring embedded WebApplicationContext
2022-01-25 15:54:32 [INFO ] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1951 ms
2022-01-25 15:54:32 [WARN ] c.n.c.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2022-01-25 15:54:32 [INFO ] c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-01-25 15:54:32 [INFO ] c.n.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@ce561cc
2022-01-25 15:54:34 [WARN ] c.n.c.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2022-01-25 15:54:34 [INFO ] c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-01-25 15:54:34 [INFO ] o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-01-25 15:54:35 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 15:54:37 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 15:54:37 [INFO ] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
2022-01-25 15:54:37 [WARN ] o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2022-01-25 15:54:37 [INFO ] o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-01-25 15:54:37 [INFO ] o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2022-01-25 15:54:37 [INFO ] c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2022-01-25 15:54:37 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2022-01-25 15:54:37 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2022-01-25 15:54:37 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2022-01-25 15:54:37 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2022-01-25 15:54:38 [INFO ] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2022-01-25 15:54:38 [INFO ] c.netflix.discovery.DiscoveryClient - Disable delta property : false
2022-01-25 15:54:38 [INFO ] c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2022-01-25 15:54:38 [INFO ] c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2022-01-25 15:54:38 [INFO ] c.netflix.discovery.DiscoveryClient - Application is null : false
2022-01-25 15:54:38 [INFO ] c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2022-01-25 15:54:38 [INFO ] c.netflix.discovery.DiscoveryClient - Application version is -1: true
2022-01-25 15:54:38 [INFO ] c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2022-01-25 15:54:38 [INFO ] c.netflix.discovery.DiscoveryClient - The response status is 200
2022-01-25 15:54:38 [INFO ] c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 4
2022-01-25 15:54:38 [INFO ] c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2022-01-25 15:54:38 [INFO ] c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1643097278484 with initial instances count: 1
2022-01-25 15:54:38 [INFO ] o.s.c.n.e.s.EurekaServiceRegistry - Registering application SPRING-PLAYER-UPMS-SERVICE with eureka with status UP
2022-01-25 15:54:38 [INFO ] c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1643097278486, current=UP, previous=STARTING]
2022-01-25 15:54:38 [INFO ] c.netflix.discovery.DiscoveryClient - DiscoveryClient_SPRING-PLAYER-UPMS-SERVICE/localhost:spring-player-upms-service:5050: registering service...
2022-01-25 15:54:38 [INFO ] io.undertow - starting server: Undertow - 2.1.7.Final
2022-01-25 15:54:38 [INFO ] org.xnio - XNIO version 3.8.0.Final
2022-01-25 15:54:38 [INFO ] c.netflix.discovery.DiscoveryClient - DiscoveryClient_SPRING-PLAYER-UPMS-SERVICE/localhost:spring-player-upms-service:5050 - registration status: 204
2022-01-25 15:54:38 [INFO ] org.xnio.nio - XNIO NIO Implementation Version 3.8.0.Final
2022-01-25 15:54:38 [INFO ] org.jboss.threads - JBoss Threads version 3.1.0.Final
2022-01-25 15:54:38 [INFO ] o.s.b.w.e.undertow.UndertowWebServer - Undertow started on port(s) 5050 (http)
2022-01-25 15:54:38 [INFO ] o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 5050
2022-01-25 15:54:39 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 15:54:39 [INFO ] c.g.p.s.upms.UpmsApplication - Started UpmsApplication in 12.852 seconds (JVM running for 13.599)
2022-01-25 15:55:57 [INFO ] io.undertow.servlet - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-01-25 15:55:57 [INFO ] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-01-25 15:55:57 [INFO ] o.s.web.servlet.DispatcherServlet - Completed initialization in 10 ms
2022-01-25 15:55:57 [INFO ] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2022-01-25 15:55:57 [INFO ] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2022-01-25 15:58:35 [INFO ] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.7.Final
2022-01-25 15:58:37 [INFO ] c.g.p.s.upms.UpmsApplication - No active profile set, falling back to default profiles: default
2022-01-25 15:58:46 [INFO ] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.7.Final
2022-01-25 15:58:47 [INFO ] c.g.p.s.upms.UpmsApplication - No active profile set, falling back to default profiles: default
2022-01-25 15:58:48 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-01-25 15:58:48 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-01-25 15:58:48 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 22ms. Found 0 Redis repository interfaces.
2022-01-25 15:58:48 [WARN ] o.s.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2022-01-25 15:58:49 [INFO ] o.s.cloud.context.scope.GenericScope - BeanFactory id=179e77f8-092e-38dc-a319-ce434fbd3015
2022-01-25 15:58:49 [INFO ] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.github.paganini2008.springplayer.redis.RedisPubSubAutoConfiguration' of type [com.github.paganini2008.springplayer.redis.RedisPubSubAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-01-25 15:58:49 [WARN ] io.undertow.websockets.jsr - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2022-01-25 15:58:49 [INFO ] io.undertow.servlet - Initializing Spring embedded WebApplicationContext
2022-01-25 15:58:49 [INFO ] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1984 ms
2022-01-25 15:58:49 [WARN ] c.n.c.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2022-01-25 15:58:49 [INFO ] c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-01-25 15:58:49 [INFO ] c.n.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@286866cb
2022-01-25 15:58:51 [WARN ] c.n.c.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2022-01-25 15:58:51 [INFO ] c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-01-25 15:58:52 [INFO ] o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-01-25 15:58:53 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 15:58:55 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 15:58:55 [INFO ] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
2022-01-25 15:58:55 [WARN ] o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2022-01-25 15:58:55 [INFO ] o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-01-25 15:58:55 [INFO ] o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2022-01-25 15:58:55 [INFO ] c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2022-01-25 15:58:55 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2022-01-25 15:58:55 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2022-01-25 15:58:55 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2022-01-25 15:58:55 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2022-01-25 15:58:55 [INFO ] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2022-01-25 15:58:55 [INFO ] c.netflix.discovery.DiscoveryClient - Disable delta property : false
2022-01-25 15:58:55 [INFO ] c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2022-01-25 15:58:55 [INFO ] c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2022-01-25 15:58:55 [INFO ] c.netflix.discovery.DiscoveryClient - Application is null : false
2022-01-25 15:58:55 [INFO ] c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2022-01-25 15:58:55 [INFO ] c.netflix.discovery.DiscoveryClient - Application version is -1: true
2022-01-25 15:58:55 [INFO ] c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2022-01-25 15:58:56 [INFO ] c.netflix.discovery.DiscoveryClient - The response status is 200
2022-01-25 15:58:56 [INFO ] c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 4
2022-01-25 15:58:56 [INFO ] c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2022-01-25 15:58:56 [INFO ] c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1643097536085 with initial instances count: 2
2022-01-25 15:58:56 [INFO ] o.s.c.n.e.s.EurekaServiceRegistry - Registering application SPRING-PLAYER-UPMS-SERVICE with eureka with status UP
2022-01-25 15:58:56 [INFO ] c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1643097536087, current=UP, previous=STARTING]
2022-01-25 15:58:56 [INFO ] c.netflix.discovery.DiscoveryClient - DiscoveryClient_SPRING-PLAYER-UPMS-SERVICE/localhost:spring-player-upms-service:5050: registering service...
2022-01-25 15:58:56 [INFO ] io.undertow - starting server: Undertow - 2.1.7.Final
2022-01-25 15:58:56 [INFO ] org.xnio - XNIO version 3.8.0.Final
2022-01-25 15:58:56 [INFO ] c.netflix.discovery.DiscoveryClient - DiscoveryClient_SPRING-PLAYER-UPMS-SERVICE/localhost:spring-player-upms-service:5050 - registration status: 204
2022-01-25 15:58:56 [INFO ] org.xnio.nio - XNIO NIO Implementation Version 3.8.0.Final
2022-01-25 15:58:56 [INFO ] org.jboss.threads - JBoss Threads version 3.1.0.Final
2022-01-25 15:58:56 [INFO ] o.s.b.w.e.undertow.UndertowWebServer - Undertow started on port(s) 5050 (http)
2022-01-25 15:58:56 [INFO ] o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 5050
2022-01-25 15:58:57 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 15:58:57 [INFO ] c.g.p.s.upms.UpmsApplication - Started UpmsApplication in 12.85 seconds (JVM running for 13.587)
2022-01-25 16:00:33 [INFO ] io.undertow.servlet - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-01-25 16:00:33 [INFO ] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-01-25 16:00:33 [INFO ] o.s.web.servlet.DispatcherServlet - Completed initialization in 10 ms
2022-01-25 16:00:33 [INFO ] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2022-01-25 16:00:33 [INFO ] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2022-01-25 16:02:56 [INFO ] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.7.Final
2022-01-25 16:02:57 [INFO ] c.g.p.s.upms.UpmsApplication - No active profile set, falling back to default profiles: default
2022-01-25 16:02:58 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-01-25 16:02:58 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-01-25 16:02:58 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 23ms. Found 0 Redis repository interfaces.
2022-01-25 16:02:58 [WARN ] o.s.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2022-01-25 16:02:59 [INFO ] o.s.cloud.context.scope.GenericScope - BeanFactory id=179e77f8-092e-38dc-a319-ce434fbd3015
2022-01-25 16:02:59 [INFO ] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.github.paganini2008.springplayer.redis.RedisPubSubAutoConfiguration' of type [com.github.paganini2008.springplayer.redis.RedisPubSubAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-01-25 16:02:59 [WARN ] io.undertow.websockets.jsr - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2022-01-25 16:02:59 [INFO ] io.undertow.servlet - Initializing Spring embedded WebApplicationContext
2022-01-25 16:02:59 [INFO ] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1980 ms
2022-01-25 16:02:59 [WARN ] c.n.c.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2022-01-25 16:02:59 [INFO ] c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-01-25 16:02:59 [INFO ] c.n.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@14b95942
2022-01-25 16:03:01 [WARN ] c.n.c.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2022-01-25 16:03:01 [INFO ] c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-01-25 16:03:01 [INFO ] o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-01-25 16:03:03 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 16:03:04 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 16:03:04 [INFO ] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
2022-01-25 16:03:04 [WARN ] o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2022-01-25 16:03:05 [INFO ] o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-01-25 16:03:05 [INFO ] o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2022-01-25 16:03:05 [INFO ] c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2022-01-25 16:03:05 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2022-01-25 16:03:05 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2022-01-25 16:03:05 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2022-01-25 16:03:05 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2022-01-25 16:03:05 [INFO ] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2022-01-25 16:03:05 [INFO ] c.netflix.discovery.DiscoveryClient - Disable delta property : false
2022-01-25 16:03:05 [INFO ] c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2022-01-25 16:03:05 [INFO ] c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2022-01-25 16:03:05 [INFO ] c.netflix.discovery.DiscoveryClient - Application is null : false
2022-01-25 16:03:05 [INFO ] c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2022-01-25 16:03:05 [INFO ] c.netflix.discovery.DiscoveryClient - Application version is -1: true
2022-01-25 16:03:05 [INFO ] c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2022-01-25 16:03:05 [INFO ] c.netflix.discovery.DiscoveryClient - The response status is 200
2022-01-25 16:03:05 [INFO ] c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 4
2022-01-25 16:03:05 [INFO ] c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2022-01-25 16:03:05 [INFO ] c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1643097785953 with initial instances count: 0
2022-01-25 16:03:05 [INFO ] o.s.c.n.e.s.EurekaServiceRegistry - Registering application SPRING-PLAYER-UPMS-SERVICE with eureka with status UP
2022-01-25 16:03:05 [INFO ] c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1643097785956, current=UP, previous=STARTING]
2022-01-25 16:03:05 [INFO ] c.netflix.discovery.DiscoveryClient - DiscoveryClient_SPRING-PLAYER-UPMS-SERVICE/localhost:spring-player-upms-service:5050: registering service...
2022-01-25 16:03:05 [INFO ] io.undertow - starting server: Undertow - 2.1.7.Final
2022-01-25 16:03:05 [INFO ] org.xnio - XNIO version 3.8.0.Final
2022-01-25 16:03:06 [INFO ] org.xnio.nio - XNIO NIO Implementation Version 3.8.0.Final
2022-01-25 16:03:06 [INFO ] c.netflix.discovery.DiscoveryClient - DiscoveryClient_SPRING-PLAYER-UPMS-SERVICE/localhost:spring-player-upms-service:5050 - registration status: 204
2022-01-25 16:03:06 [INFO ] org.jboss.threads - JBoss Threads version 3.1.0.Final
2022-01-25 16:03:06 [INFO ] o.s.b.w.e.undertow.UndertowWebServer - Undertow started on port(s) 5050 (http)
2022-01-25 16:03:06 [INFO ] o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 5050
2022-01-25 16:03:07 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 16:03:07 [INFO ] c.g.p.s.upms.UpmsApplication - Started UpmsApplication in 12.771 seconds (JVM running for 13.527)
2022-01-25 16:03:13 [INFO ] c.netflix.discovery.DiscoveryClient - Disable delta property : false
2022-01-25 16:03:13 [INFO ] c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2022-01-25 16:03:13 [INFO ] c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2022-01-25 16:03:13 [INFO ] c.netflix.discovery.DiscoveryClient - Application is null : false
2022-01-25 16:03:13 [INFO ] c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2022-01-25 16:03:13 [INFO ] c.netflix.discovery.DiscoveryClient - Application version is -1: false
2022-01-25 16:03:13 [INFO ] c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2022-01-25 16:03:14 [INFO ] c.netflix.discovery.DiscoveryClient - The response status is 200
2022-01-25 16:03:15 [INFO ] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.7.Final
2022-01-25 16:04:12 [INFO ] io.undertow.servlet - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-01-25 16:04:12 [INFO ] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-01-25 16:04:12 [INFO ] o.s.web.servlet.DispatcherServlet - Completed initialization in 10 ms
2022-01-25 16:04:12 [INFO ] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2022-01-25 16:04:12 [INFO ] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2022-01-25 16:09:27 [INFO ] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.7.Final
2022-01-25 16:09:29 [INFO ] c.g.p.s.upms.UpmsApplication - No active profile set, falling back to default profiles: default
2022-01-25 16:09:30 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-01-25 16:09:30 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-01-25 16:09:30 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 24ms. Found 0 Redis repository interfaces.
2022-01-25 16:09:30 [WARN ] o.s.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2022-01-25 16:09:31 [INFO ] o.s.cloud.context.scope.GenericScope - BeanFactory id=179e77f8-092e-38dc-a319-ce434fbd3015
2022-01-25 16:09:31 [INFO ] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.github.paganini2008.springplayer.redis.RedisPubSubAutoConfiguration' of type [com.github.paganini2008.springplayer.redis.RedisPubSubAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-01-25 16:09:31 [WARN ] io.undertow.websockets.jsr - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2022-01-25 16:09:31 [INFO ] io.undertow.servlet - Initializing Spring embedded WebApplicationContext
2022-01-25 16:09:31 [INFO ] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1986 ms
2022-01-25 16:09:31 [WARN ] c.n.c.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2022-01-25 16:09:31 [INFO ] c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-01-25 16:09:31 [INFO ] c.n.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@8ac12e6
2022-01-25 16:09:33 [WARN ] c.n.c.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2022-01-25 16:09:33 [INFO ] c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-01-25 16:09:33 [INFO ] o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-01-25 16:09:35 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 16:09:36 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 16:09:36 [INFO ] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
2022-01-25 16:09:36 [WARN ] o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2022-01-25 16:09:37 [INFO ] o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-01-25 16:09:37 [INFO ] o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2022-01-25 16:09:37 [INFO ] c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2022-01-25 16:09:37 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2022-01-25 16:09:37 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2022-01-25 16:09:37 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2022-01-25 16:09:37 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2022-01-25 16:09:37 [INFO ] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2022-01-25 16:09:37 [INFO ] c.netflix.discovery.DiscoveryClient - Disable delta property : false
2022-01-25 16:09:37 [INFO ] c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2022-01-25 16:09:37 [INFO ] c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2022-01-25 16:09:37 [INFO ] c.netflix.discovery.DiscoveryClient - Application is null : false
2022-01-25 16:09:37 [INFO ] c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2022-01-25 16:09:37 [INFO ] c.netflix.discovery.DiscoveryClient - Application version is -1: true
2022-01-25 16:09:37 [INFO ] c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2022-01-25 16:09:37 [INFO ] c.netflix.discovery.DiscoveryClient - The response status is 200
2022-01-25 16:09:37 [INFO ] c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 4
2022-01-25 16:09:37 [INFO ] c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2022-01-25 16:09:37 [INFO ] c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1643098177996 with initial instances count: 0
2022-01-25 16:09:37 [INFO ] o.s.c.n.e.s.EurekaServiceRegistry - Registering application SPRING-PLAYER-UPMS-SERVICE with eureka with status UP
2022-01-25 16:09:37 [INFO ] c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1643098177999, current=UP, previous=STARTING]
2022-01-25 16:09:38 [INFO ] c.netflix.discovery.DiscoveryClient - DiscoveryClient_SPRING-PLAYER-UPMS-SERVICE/localhost:spring-player-upms-service:5050: registering service...
2022-01-25 16:09:38 [INFO ] io.undertow - starting server: Undertow - 2.1.7.Final
2022-01-25 16:09:38 [INFO ] org.xnio - XNIO version 3.8.0.Final
2022-01-25 16:09:38 [INFO ] org.xnio.nio - XNIO NIO Implementation Version 3.8.0.Final
2022-01-25 16:09:38 [INFO ] c.netflix.discovery.DiscoveryClient - DiscoveryClient_SPRING-PLAYER-UPMS-SERVICE/localhost:spring-player-upms-service:5050 - registration status: 204
2022-01-25 16:09:38 [INFO ] org.jboss.threads - JBoss Threads version 3.1.0.Final
2022-01-25 16:09:38 [INFO ] o.s.b.w.e.undertow.UndertowWebServer - Undertow started on port(s) 5050 (http)
2022-01-25 16:09:38 [INFO ] o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 5050
2022-01-25 16:09:39 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 16:09:39 [INFO ] c.g.p.s.upms.UpmsApplication - Started UpmsApplication in 12.939 seconds (JVM running for 13.674)
2022-01-25 16:09:46 [INFO ] c.netflix.discovery.DiscoveryClient - Disable delta property : false
2022-01-25 16:09:46 [INFO ] c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2022-01-25 16:09:46 [INFO ] c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2022-01-25 16:09:46 [INFO ] c.netflix.discovery.DiscoveryClient - Application is null : false
2022-01-25 16:09:46 [INFO ] c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2022-01-25 16:09:46 [INFO ] c.netflix.discovery.DiscoveryClient - Application version is -1: false
2022-01-25 16:09:46 [INFO ] c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2022-01-25 16:09:46 [INFO ] c.netflix.discovery.DiscoveryClient - The response status is 200
2022-01-25 16:09:52 [INFO ] io.undertow.servlet - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-01-25 16:09:52 [INFO ] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-01-25 16:09:52 [INFO ] o.s.web.servlet.DispatcherServlet - Completed initialization in 7 ms
2022-01-25 16:09:52 [INFO ] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2022-01-25 16:09:52 [INFO ] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2022-01-25 16:17:52 [INFO ] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.7.Final
2022-01-25 16:17:54 [INFO ] c.g.p.s.upms.UpmsApplication - No active profile set, falling back to default profiles: default
2022-01-25 16:17:55 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-01-25 16:17:55 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-01-25 16:17:55 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 22ms. Found 0 Redis repository interfaces.
2022-01-25 16:17:55 [WARN ] o.s.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2022-01-25 16:17:55 [INFO ] o.s.cloud.context.scope.GenericScope - BeanFactory id=179e77f8-092e-38dc-a319-ce434fbd3015
2022-01-25 16:17:56 [INFO ] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.github.paganini2008.springplayer.redis.RedisPubSubAutoConfiguration' of type [com.github.paganini2008.springplayer.redis.RedisPubSubAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-01-25 16:17:56 [WARN ] io.undertow.websockets.jsr - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2022-01-25 16:17:56 [INFO ] io.undertow.servlet - Initializing Spring embedded WebApplicationContext
2022-01-25 16:17:56 [INFO ] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2014 ms
2022-01-25 16:17:56 [WARN ] c.n.c.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2022-01-25 16:17:56 [INFO ] c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-01-25 16:17:56 [INFO ] c.n.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@5d7f1e59
2022-01-25 16:17:58 [WARN ] c.n.c.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2022-01-25 16:17:58 [INFO ] c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-01-25 16:17:58 [INFO ] o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-01-25 16:18:00 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 16:18:01 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 16:18:01 [INFO ] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
2022-01-25 16:18:01 [WARN ] o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2022-01-25 16:18:01 [INFO ] o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-01-25 16:18:01 [INFO ] o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2022-01-25 16:18:02 [INFO ] c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2022-01-25 16:18:02 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2022-01-25 16:18:02 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2022-01-25 16:18:02 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2022-01-25 16:18:02 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2022-01-25 16:18:02 [INFO ] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2022-01-25 16:18:02 [INFO ] c.netflix.discovery.DiscoveryClient - Disable delta property : false
2022-01-25 16:18:02 [INFO ] c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2022-01-25 16:18:02 [INFO ] c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2022-01-25 16:18:02 [INFO ] c.netflix.discovery.DiscoveryClient - Application is null : false
2022-01-25 16:18:02 [INFO ] c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2022-01-25 16:18:02 [INFO ] c.netflix.discovery.DiscoveryClient - Application version is -1: true
2022-01-25 16:18:02 [INFO ] c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2022-01-25 16:18:02 [INFO ] c.netflix.discovery.DiscoveryClient - The response status is 200
2022-01-25 16:18:02 [INFO ] c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 4
2022-01-25 16:18:02 [INFO ] c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2022-01-25 16:18:02 [INFO ] c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1643098682945 with initial instances count: 0
2022-01-25 16:18:02 [INFO ] o.s.c.n.e.s.EurekaServiceRegistry - Registering application SPRING-PLAYER-UPMS-SERVICE with eureka with status UP
2022-01-25 16:18:02 [INFO ] c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1643098682948, current=UP, previous=STARTING]
2022-01-25 16:18:02 [INFO ] c.netflix.discovery.DiscoveryClient - DiscoveryClient_SPRING-PLAYER-UPMS-SERVICE/localhost:spring-player-upms-service:5050: registering service...
2022-01-25 16:18:02 [INFO ] io.undertow - starting server: Undertow - 2.1.7.Final
2022-01-25 16:18:02 [INFO ] org.xnio - XNIO version 3.8.0.Final
2022-01-25 16:18:03 [INFO ] org.xnio.nio - XNIO NIO Implementation Version 3.8.0.Final
2022-01-25 16:18:03 [INFO ] c.netflix.discovery.DiscoveryClient - DiscoveryClient_SPRING-PLAYER-UPMS-SERVICE/localhost:spring-player-upms-service:5050 - registration status: 204
2022-01-25 16:18:03 [INFO ] org.jboss.threads - JBoss Threads version 3.1.0.Final
2022-01-25 16:18:03 [INFO ] o.s.b.w.e.undertow.UndertowWebServer - Undertow started on port(s) 5050 (http)
2022-01-25 16:18:03 [INFO ] o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 5050
2022-01-25 16:18:04 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 16:18:04 [INFO ] c.g.p.s.upms.UpmsApplication - Started UpmsApplication in 13.165 seconds (JVM running for 13.908)
2022-01-25 16:18:10 [INFO ] c.netflix.discovery.DiscoveryClient - Disable delta property : false
2022-01-25 16:18:10 [INFO ] c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2022-01-25 16:18:10 [INFO ] c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2022-01-25 16:18:10 [INFO ] c.netflix.discovery.DiscoveryClient - Application is null : false
2022-01-25 16:18:10 [INFO ] c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2022-01-25 16:18:10 [INFO ] c.netflix.discovery.DiscoveryClient - Application version is -1: false
2022-01-25 16:18:10 [INFO ] c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2022-01-25 16:18:11 [INFO ] c.netflix.discovery.DiscoveryClient - The response status is 200
2022-01-25 16:19:24 [INFO ] io.undertow.servlet - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-01-25 16:19:24 [INFO ] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-01-25 16:19:24 [INFO ] o.s.web.servlet.DispatcherServlet - Completed initialization in 10 ms
2022-01-25 16:19:24 [INFO ] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2022-01-25 16:19:24 [INFO ] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2022-01-25 16:23:02 [INFO ] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2022-01-25 16:28:02 [INFO ] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2022-01-25 16:33:02 [INFO ] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2022-01-25 16:38:02 [INFO ] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2022-01-25 16:46:28 [INFO ] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.7.Final
2022-01-25 16:46:29 [INFO ] c.g.p.s.upms.UpmsApplication - No active profile set, falling back to default profiles: default
2022-01-25 16:46:30 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-01-25 16:46:30 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-01-25 16:46:30 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 24ms. Found 0 Redis repository interfaces.
2022-01-25 16:46:31 [WARN ] o.s.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2022-01-25 16:46:31 [INFO ] o.s.cloud.context.scope.GenericScope - BeanFactory id=179e77f8-092e-38dc-a319-ce434fbd3015
2022-01-25 16:46:31 [INFO ] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.github.paganini2008.springplayer.redis.RedisPubSubAutoConfiguration' of type [com.github.paganini2008.springplayer.redis.RedisPubSubAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-01-25 16:46:31 [WARN ] io.undertow.websockets.jsr - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2022-01-25 16:46:31 [INFO ] io.undertow.servlet - Initializing Spring embedded WebApplicationContext
2022-01-25 16:46:31 [INFO ] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2024 ms
2022-01-25 16:46:32 [WARN ] c.n.c.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2022-01-25 16:46:32 [INFO ] c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-01-25 16:46:32 [INFO ] c.n.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@d0b814d
2022-01-25 16:46:34 [WARN ] c.n.c.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2022-01-25 16:46:34 [INFO ] c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-01-25 16:46:34 [INFO ] o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-01-25 16:46:35 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 16:46:37 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 16:46:37 [INFO ] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
2022-01-25 16:46:37 [WARN ] o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2022-01-25 16:46:37 [INFO ] o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-01-25 16:46:37 [INFO ] o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2022-01-25 16:46:37 [INFO ] c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2022-01-25 16:46:37 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2022-01-25 16:46:37 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2022-01-25 16:46:37 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2022-01-25 16:46:37 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2022-01-25 16:46:38 [INFO ] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2022-01-25 16:46:38 [INFO ] c.netflix.discovery.DiscoveryClient - Disable delta property : false
2022-01-25 16:46:38 [INFO ] c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2022-01-25 16:46:38 [INFO ] c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2022-01-25 16:46:38 [INFO ] c.netflix.discovery.DiscoveryClient - Application is null : false
2022-01-25 16:46:38 [INFO ] c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2022-01-25 16:46:38 [INFO ] c.netflix.discovery.DiscoveryClient - Application version is -1: true
2022-01-25 16:46:38 [INFO ] c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2022-01-25 16:46:38 [INFO ] c.netflix.discovery.DiscoveryClient - The response status is 200
2022-01-25 16:46:38 [INFO ] c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 4
2022-01-25 16:46:38 [INFO ] c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2022-01-25 16:46:38 [INFO ] c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1643100398250 with initial instances count: 0
2022-01-25 16:46:38 [INFO ] o.s.c.n.e.s.EurekaServiceRegistry - Registering application SPRING-PLAYER-UPMS-SERVICE with eureka with status UP
2022-01-25 16:46:38 [INFO ] c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1643100398253, current=UP, previous=STARTING]
2022-01-25 16:46:38 [INFO ] c.netflix.discovery.DiscoveryClient - DiscoveryClient_SPRING-PLAYER-UPMS-SERVICE/localhost:spring-player-upms-service:5050: registering service...
2022-01-25 16:46:38 [INFO ] io.undertow - starting server: Undertow - 2.1.7.Final
2022-01-25 16:46:38 [INFO ] org.xnio - XNIO version 3.8.0.Final
2022-01-25 16:46:38 [INFO ] org.xnio.nio - XNIO NIO Implementation Version 3.8.0.Final
2022-01-25 16:46:38 [INFO ] c.netflix.discovery.DiscoveryClient - DiscoveryClient_SPRING-PLAYER-UPMS-SERVICE/localhost:spring-player-upms-service:5050 - registration status: 204
2022-01-25 16:46:38 [INFO ] org.jboss.threads - JBoss Threads version 3.1.0.Final
2022-01-25 16:46:38 [INFO ] o.s.b.w.e.undertow.UndertowWebServer - Undertow started on port(s) 5050 (http)
2022-01-25 16:46:38 [INFO ] o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 5050
2022-01-25 16:46:39 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 16:46:39 [INFO ] c.g.p.s.upms.UpmsApplication - Started UpmsApplication in 12.945 seconds (JVM running for 13.694)
2022-01-25 16:46:46 [INFO ] c.netflix.discovery.DiscoveryClient - Disable delta property : false
2022-01-25 16:46:46 [INFO ] c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2022-01-25 16:46:46 [INFO ] c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2022-01-25 16:46:46 [INFO ] c.netflix.discovery.DiscoveryClient - Application is null : false
2022-01-25 16:46:46 [INFO ] c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2022-01-25 16:46:46 [INFO ] c.netflix.discovery.DiscoveryClient - Application version is -1: false
2022-01-25 16:46:46 [INFO ] c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2022-01-25 16:46:46 [INFO ] c.netflix.discovery.DiscoveryClient - The response status is 200
2022-01-25 16:47:25 [INFO ] io.undertow.servlet - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-01-25 16:47:25 [INFO ] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-01-25 16:47:25 [INFO ] o.s.web.servlet.DispatcherServlet - Completed initialization in 9 ms
2022-01-25 16:47:25 [INFO ] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2022-01-25 16:47:25 [INFO ] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2022-01-25 16:50:08 [INFO ] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.7.Final
2022-01-25 16:50:09 [INFO ] c.g.p.s.upms.UpmsApplication - No active profile set, falling back to default profiles: default
2022-01-25 16:50:10 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-01-25 16:50:10 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-01-25 16:50:10 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18ms. Found 0 Redis repository interfaces.
2022-01-25 16:50:10 [WARN ] o.s.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2022-01-25 16:50:10 [INFO ] o.s.cloud.context.scope.GenericScope - BeanFactory id=179e77f8-092e-38dc-a319-ce434fbd3015
2022-01-25 16:50:11 [INFO ] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.github.paganini2008.springplayer.redis.RedisPubSubAutoConfiguration' of type [com.github.paganini2008.springplayer.redis.RedisPubSubAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-01-25 16:50:11 [WARN ] io.undertow.websockets.jsr - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2022-01-25 16:50:11 [INFO ] io.undertow.servlet - Initializing Spring embedded WebApplicationContext
2022-01-25 16:50:11 [INFO ] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1607 ms
2022-01-25 16:50:11 [WARN ] c.n.c.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2022-01-25 16:50:11 [INFO ] c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-01-25 16:50:11 [INFO ] c.n.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@4735d6e5
2022-01-25 16:50:13 [WARN ] c.n.c.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2022-01-25 16:50:13 [INFO ] c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-01-25 16:50:13 [INFO ] o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-01-25 16:50:14 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 16:50:16 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 16:50:16 [INFO ] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
2022-01-25 16:50:16 [WARN ] o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2022-01-25 16:50:16 [INFO ] o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-01-25 16:50:16 [INFO ] o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2022-01-25 16:50:16 [INFO ] c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2022-01-25 16:50:16 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2022-01-25 16:50:16 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2022-01-25 16:50:16 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2022-01-25 16:50:16 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2022-01-25 16:50:16 [INFO ] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2022-01-25 16:50:16 [INFO ] c.netflix.discovery.DiscoveryClient - Disable delta property : false
2022-01-25 16:50:16 [INFO ] c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2022-01-25 16:50:16 [INFO ] c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2022-01-25 16:50:16 [INFO ] c.netflix.discovery.DiscoveryClient - Application is null : false
2022-01-25 16:50:16 [INFO ] c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2022-01-25 16:50:16 [INFO ] c.netflix.discovery.DiscoveryClient - Application version is -1: true
2022-01-25 16:50:16 [INFO ] c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2022-01-25 16:50:17 [INFO ] c.netflix.discovery.DiscoveryClient - The response status is 200
2022-01-25 16:50:17 [INFO ] c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 4
2022-01-25 16:50:17 [INFO ] c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2022-01-25 16:50:17 [INFO ] c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1643100617075 with initial instances count: 2
2022-01-25 16:50:17 [INFO ] o.s.c.n.e.s.EurekaServiceRegistry - Registering application SPRING-PLAYER-UPMS-SERVICE with eureka with status UP
2022-01-25 16:50:17 [INFO ] c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1643100617076, current=UP, previous=STARTING]
2022-01-25 16:50:17 [INFO ] c.netflix.discovery.DiscoveryClient - DiscoveryClient_SPRING-PLAYER-UPMS-SERVICE/localhost:spring-player-upms-service:5050: registering service...
2022-01-25 16:50:17 [INFO ] io.undertow - starting server: Undertow - 2.1.7.Final
2022-01-25 16:50:17 [INFO ] org.xnio - XNIO version 3.8.0.Final
2022-01-25 16:50:17 [INFO ] c.netflix.discovery.DiscoveryClient - DiscoveryClient_SPRING-PLAYER-UPMS-SERVICE/localhost:spring-player-upms-service:5050 - registration status: 204
2022-01-25 16:50:17 [INFO ] org.xnio.nio - XNIO NIO Implementation Version 3.8.0.Final
2022-01-25 16:50:17 [INFO ] org.jboss.threads - JBoss Threads version 3.1.0.Final
2022-01-25 16:50:17 [INFO ] o.s.b.w.e.undertow.UndertowWebServer - Undertow started on port(s) 5050 (http)
2022-01-25 16:50:17 [INFO ] o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 5050
2022-01-25 16:50:18 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 16:50:18 [INFO ] c.g.p.s.upms.UpmsApplication - Started UpmsApplication in 11.476 seconds (JVM running for 11.925)
2022-01-25 16:50:23 [INFO ] io.undertow.servlet - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-01-25 16:50:23 [INFO ] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-01-25 16:50:23 [INFO ] o.s.web.servlet.DispatcherServlet - Completed initialization in 7 ms
2022-01-25 16:50:23 [INFO ] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2022-01-25 16:50:23 [INFO ] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2022-01-25 16:55:16 [INFO ] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2022-01-25 17:00:16 [INFO ] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2022-01-25 17:05:16 [INFO ] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2022-01-25 17:09:07 [INFO ] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.7.Final
2022-01-25 17:09:09 [INFO ] c.g.p.s.upms.UpmsApplication - No active profile set, falling back to default profiles: default
2022-01-25 17:09:09 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-01-25 17:09:09 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-01-25 17:09:10 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 27ms. Found 0 Redis repository interfaces.
2022-01-25 17:09:10 [WARN ] o.s.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2022-01-25 17:09:10 [INFO ] o.s.cloud.context.scope.GenericScope - BeanFactory id=179e77f8-092e-38dc-a319-ce434fbd3015
2022-01-25 17:09:10 [INFO ] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.github.paganini2008.springplayer.redis.RedisPubSubAutoConfiguration' of type [com.github.paganini2008.springplayer.redis.RedisPubSubAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-01-25 17:09:11 [WARN ] io.undertow.websockets.jsr - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2022-01-25 17:09:11 [INFO ] io.undertow.servlet - Initializing Spring embedded WebApplicationContext
2022-01-25 17:09:11 [INFO ] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1974 ms
2022-01-25 17:09:11 [WARN ] c.n.c.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2022-01-25 17:09:11 [INFO ] c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-01-25 17:09:11 [INFO ] c.n.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@286866cb
2022-01-25 17:09:13 [WARN ] c.n.c.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2022-01-25 17:09:13 [INFO ] c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-01-25 17:09:13 [INFO ] o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-01-25 17:09:14 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 17:09:16 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 17:09:16 [INFO ] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
2022-01-25 17:09:16 [WARN ] o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2022-01-25 17:09:16 [INFO ] o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-01-25 17:09:16 [INFO ] o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2022-01-25 17:09:16 [INFO ] c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2022-01-25 17:09:16 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2022-01-25 17:09:16 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2022-01-25 17:09:16 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2022-01-25 17:09:16 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2022-01-25 17:09:17 [INFO ] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2022-01-25 17:09:17 [INFO ] c.netflix.discovery.DiscoveryClient - Disable delta property : false
2022-01-25 17:09:17 [INFO ] c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2022-01-25 17:09:17 [INFO ] c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2022-01-25 17:09:17 [INFO ] c.netflix.discovery.DiscoveryClient - Application is null : false
2022-01-25 17:09:17 [INFO ] c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2022-01-25 17:09:17 [INFO ] c.netflix.discovery.DiscoveryClient - Application version is -1: true
2022-01-25 17:09:17 [INFO ] c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2022-01-25 17:09:17 [INFO ] c.netflix.discovery.DiscoveryClient - The response status is 200
2022-01-25 17:09:17 [INFO ] c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 4
2022-01-25 17:09:17 [INFO ] c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2022-01-25 17:09:17 [INFO ] c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1643101757446 with initial instances count: 2
2022-01-25 17:09:17 [INFO ] o.s.c.n.e.s.EurekaServiceRegistry - Registering application SPRING-PLAYER-UPMS-SERVICE with eureka with status UP
2022-01-25 17:09:17 [INFO ] c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1643101757448, current=UP, previous=STARTING]
2022-01-25 17:09:17 [INFO ] c.netflix.discovery.DiscoveryClient - DiscoveryClient_SPRING-PLAYER-UPMS-SERVICE/localhost:spring-player-upms-service:5050: registering service...
2022-01-25 17:09:17 [INFO ] io.undertow - starting server: Undertow - 2.1.7.Final
2022-01-25 17:09:17 [INFO ] org.xnio - XNIO version 3.8.0.Final
2022-01-25 17:09:17 [INFO ] c.netflix.discovery.DiscoveryClient - DiscoveryClient_SPRING-PLAYER-UPMS-SERVICE/localhost:spring-player-upms-service:5050 - registration status: 204
2022-01-25 17:09:17 [INFO ] org.xnio.nio - XNIO NIO Implementation Version 3.8.0.Final
2022-01-25 17:09:17 [INFO ] org.jboss.threads - JBoss Threads version 3.1.0.Final
2022-01-25 17:09:17 [INFO ] o.s.b.w.e.undertow.UndertowWebServer - Undertow started on port(s) 5050 (http)
2022-01-25 17:09:17 [INFO ] o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 5050
2022-01-25 17:09:18 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 17:09:18 [INFO ] c.g.p.s.upms.UpmsApplication - Started UpmsApplication in 12.925 seconds (JVM running for 13.662)
2022-01-25 17:10:02 [INFO ] io.undertow.servlet - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-01-25 17:10:02 [INFO ] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-01-25 17:10:02 [INFO ] o.s.web.servlet.DispatcherServlet - Completed initialization in 8 ms
2022-01-25 17:10:02 [INFO ] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2022-01-25 17:10:02 [INFO ] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2022-01-25 17:13:59 [INFO ] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.7.Final
2022-01-25 17:14:01 [INFO ] c.g.p.s.upms.UpmsApplication - No active profile set, falling back to default profiles: default
2022-01-25 17:14:02 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-01-25 17:14:02 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-01-25 17:14:02 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18ms. Found 0 Redis repository interfaces.
2022-01-25 17:14:02 [WARN ] o.s.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2022-01-25 17:14:02 [INFO ] o.s.cloud.context.scope.GenericScope - BeanFactory id=179e77f8-092e-38dc-a319-ce434fbd3015
2022-01-25 17:14:02 [INFO ] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.github.paganini2008.springplayer.redis.RedisPubSubAutoConfiguration' of type [com.github.paganini2008.springplayer.redis.RedisPubSubAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-01-25 17:14:02 [WARN ] io.undertow.websockets.jsr - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2022-01-25 17:14:03 [INFO ] io.undertow.servlet - Initializing Spring embedded WebApplicationContext
2022-01-25 17:14:03 [INFO ] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1579 ms
2022-01-25 17:14:03 [WARN ] c.n.c.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2022-01-25 17:14:03 [INFO ] c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-01-25 17:14:03 [INFO ] c.n.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@4735d6e5
2022-01-25 17:14:04 [WARN ] c.n.c.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2022-01-25 17:14:04 [INFO ] c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-01-25 17:14:04 [INFO ] o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-01-25 17:14:06 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 17:14:07 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 17:14:07 [INFO ] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
2022-01-25 17:14:07 [WARN ] o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2022-01-25 17:14:07 [INFO ] o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-01-25 17:14:07 [INFO ] o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2022-01-25 17:14:07 [INFO ] c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2022-01-25 17:14:08 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2022-01-25 17:14:08 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2022-01-25 17:14:08 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2022-01-25 17:14:08 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2022-01-25 17:14:08 [INFO ] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2022-01-25 17:14:08 [INFO ] c.netflix.discovery.DiscoveryClient - Disable delta property : false
2022-01-25 17:14:08 [INFO ] c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2022-01-25 17:14:08 [INFO ] c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2022-01-25 17:14:08 [INFO ] c.netflix.discovery.DiscoveryClient - Application is null : false
2022-01-25 17:14:08 [INFO ] c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2022-01-25 17:14:08 [INFO ] c.netflix.discovery.DiscoveryClient - Application version is -1: true
2022-01-25 17:14:08 [INFO ] c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2022-01-25 17:14:08 [INFO ] c.netflix.discovery.DiscoveryClient - The response status is 200
2022-01-25 17:14:08 [INFO ] c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 4
2022-01-25 17:14:08 [INFO ] c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2022-01-25 17:14:08 [INFO ] c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1643102048632 with initial instances count: 2
2022-01-25 17:14:08 [INFO ] o.s.c.n.e.s.EurekaServiceRegistry - Registering application SPRING-PLAYER-UPMS-SERVICE with eureka with status UP
2022-01-25 17:14:08 [INFO ] c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1643102048634, current=UP, previous=STARTING]
2022-01-25 17:14:08 [INFO ] c.netflix.discovery.DiscoveryClient - DiscoveryClient_SPRING-PLAYER-UPMS-SERVICE/localhost:spring-player-upms-service:5050: registering service...
2022-01-25 17:14:08 [INFO ] io.undertow - starting server: Undertow - 2.1.7.Final
2022-01-25 17:14:08 [INFO ] org.xnio - XNIO version 3.8.0.Final
2022-01-25 17:14:08 [INFO ] org.xnio.nio - XNIO NIO Implementation Version 3.8.0.Final
2022-01-25 17:14:08 [INFO ] c.netflix.discovery.DiscoveryClient - DiscoveryClient_SPRING-PLAYER-UPMS-SERVICE/localhost:spring-player-upms-service:5050 - registration status: 204
2022-01-25 17:14:08 [INFO ] org.jboss.threads - JBoss Threads version 3.1.0.Final
2022-01-25 17:14:08 [INFO ] o.s.b.w.e.undertow.UndertowWebServer - Undertow started on port(s) 5050 (http)
2022-01-25 17:14:08 [INFO ] o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 5050
2022-01-25 17:14:09 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 17:14:09 [INFO ] c.g.p.s.upms.UpmsApplication - Started UpmsApplication in 11.502 seconds (JVM running for 11.961)
2022-01-25 17:14:52 [INFO ] io.undertow.servlet - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-01-25 17:14:52 [INFO ] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-01-25 17:14:52 [INFO ] o.s.web.servlet.DispatcherServlet - Completed initialization in 8 ms
2022-01-25 17:14:52 [INFO ] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2022-01-25 17:14:52 [INFO ] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2022-01-25 17:19:08 [INFO ] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2022-01-25 17:24:08 [INFO ] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2022-01-25 17:26:55 [INFO ] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.7.Final
2022-01-25 17:26:56 [INFO ] c.g.p.s.upms.UpmsApplication - No active profile set, falling back to default profiles: default
2022-01-25 17:26:57 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-01-25 17:26:57 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-01-25 17:26:57 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19ms. Found 0 Redis repository interfaces.
2022-01-25 17:26:57 [WARN ] o.s.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2022-01-25 17:26:57 [INFO ] o.s.cloud.context.scope.GenericScope - BeanFactory id=179e77f8-092e-38dc-a319-ce434fbd3015
2022-01-25 17:26:58 [INFO ] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.github.paganini2008.springplayer.redis.RedisPubSubAutoConfiguration' of type [com.github.paganini2008.springplayer.redis.RedisPubSubAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-01-25 17:26:58 [WARN ] io.undertow.websockets.jsr - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2022-01-25 17:26:58 [INFO ] io.undertow.servlet - Initializing Spring embedded WebApplicationContext
2022-01-25 17:26:58 [INFO ] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1576 ms
2022-01-25 17:26:58 [WARN ] c.n.c.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2022-01-25 17:26:58 [INFO ] c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-01-25 17:26:58 [INFO ] c.n.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@4735d6e5
2022-01-25 17:27:00 [WARN ] c.n.c.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2022-01-25 17:27:00 [INFO ] c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-01-25 17:27:00 [INFO ] o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-01-25 17:27:01 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 17:27:03 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 17:27:03 [INFO ] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
2022-01-25 17:27:03 [WARN ] o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2022-01-25 17:27:03 [INFO ] o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-01-25 17:27:03 [INFO ] o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2022-01-25 17:27:03 [INFO ] c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2022-01-25 17:27:03 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2022-01-25 17:27:03 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2022-01-25 17:27:03 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2022-01-25 17:27:03 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2022-01-25 17:27:03 [INFO ] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2022-01-25 17:27:03 [INFO ] c.netflix.discovery.DiscoveryClient - Disable delta property : false
2022-01-25 17:27:03 [INFO ] c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2022-01-25 17:27:03 [INFO ] c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2022-01-25 17:27:03 [INFO ] c.netflix.discovery.DiscoveryClient - Application is null : false
2022-01-25 17:27:03 [INFO ] c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2022-01-25 17:27:03 [INFO ] c.netflix.discovery.DiscoveryClient - Application version is -1: true
2022-01-25 17:27:03 [INFO ] c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2022-01-25 17:27:04 [INFO ] c.netflix.discovery.DiscoveryClient - The response status is 200
2022-01-25 17:27:04 [INFO ] c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 4
2022-01-25 17:27:04 [INFO ] c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2022-01-25 17:27:04 [INFO ] c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1643102824011 with initial instances count: 0
2022-01-25 17:27:04 [INFO ] o.s.c.n.e.s.EurekaServiceRegistry - Registering application SPRING-PLAYER-UPMS-SERVICE with eureka with status UP
2022-01-25 17:27:04 [INFO ] c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1643102824014, current=UP, previous=STARTING]
2022-01-25 17:27:04 [INFO ] c.netflix.discovery.DiscoveryClient - DiscoveryClient_SPRING-PLAYER-UPMS-SERVICE/localhost:spring-player-upms-service:5050: registering service...
2022-01-25 17:27:04 [INFO ] io.undertow - starting server: Undertow - 2.1.7.Final
2022-01-25 17:27:04 [INFO ] org.xnio - XNIO version 3.8.0.Final
2022-01-25 17:27:04 [INFO ] org.xnio.nio - XNIO NIO Implementation Version 3.8.0.Final
2022-01-25 17:27:04 [INFO ] c.netflix.discovery.DiscoveryClient - DiscoveryClient_SPRING-PLAYER-UPMS-SERVICE/localhost:spring-player-upms-service:5050 - registration status: 204
2022-01-25 17:27:04 [INFO ] org.jboss.threads - JBoss Threads version 3.1.0.Final
2022-01-25 17:27:04 [INFO ] o.s.b.w.e.undertow.UndertowWebServer - Undertow started on port(s) 5050 (http)
2022-01-25 17:27:04 [INFO ] o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 5050
2022-01-25 17:27:05 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 17:27:05 [INFO ] c.g.p.s.upms.UpmsApplication - Started UpmsApplication in 11.402 seconds (JVM running for 11.851)
2022-01-25 17:27:12 [INFO ] c.netflix.discovery.DiscoveryClient - Disable delta property : false
2022-01-25 17:27:12 [INFO ] c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2022-01-25 17:27:12 [INFO ] c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2022-01-25 17:27:12 [INFO ] c.netflix.discovery.DiscoveryClient - Application is null : false
2022-01-25 17:27:12 [INFO ] c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2022-01-25 17:27:12 [INFO ] c.netflix.discovery.DiscoveryClient - Application version is -1: false
2022-01-25 17:27:12 [INFO ] c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2022-01-25 17:27:12 [INFO ] c.netflix.discovery.DiscoveryClient - The response status is 200
2022-01-25 17:27:51 [INFO ] io.undertow.servlet - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-01-25 17:27:51 [INFO ] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-01-25 17:27:51 [INFO ] o.s.web.servlet.DispatcherServlet - Completed initialization in 8 ms
2022-01-25 17:27:51 [INFO ] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2022-01-25 17:27:51 [INFO ] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2022-01-25 17:32:03 [INFO ] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2022-01-25 17:36:35 [INFO ] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.7.Final
2022-01-25 17:36:37 [INFO ] c.g.p.s.upms.UpmsApplication - No active profile set, falling back to default profiles: default
2022-01-25 17:36:37 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-01-25 17:36:37 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-01-25 17:36:38 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18ms. Found 0 Redis repository interfaces.
2022-01-25 17:36:38 [WARN ] o.s.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2022-01-25 17:36:38 [INFO ] o.s.cloud.context.scope.GenericScope - BeanFactory id=179e77f8-092e-38dc-a319-ce434fbd3015
2022-01-25 17:36:38 [INFO ] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.github.paganini2008.springplayer.redis.RedisPubSubAutoConfiguration' of type [com.github.paganini2008.springplayer.redis.RedisPubSubAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-01-25 17:36:38 [WARN ] io.undertow.websockets.jsr - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2022-01-25 17:36:38 [INFO ] io.undertow.servlet - Initializing Spring embedded WebApplicationContext
2022-01-25 17:36:38 [INFO ] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1568 ms
2022-01-25 17:36:38 [WARN ] c.n.c.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2022-01-25 17:36:38 [INFO ] c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-01-25 17:36:38 [INFO ] c.n.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@4735d6e5
2022-01-25 17:36:40 [WARN ] c.n.c.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2022-01-25 17:36:40 [INFO ] c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-01-25 17:36:40 [INFO ] o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-01-25 17:36:41 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 17:36:43 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 17:36:43 [INFO ] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
2022-01-25 17:36:43 [WARN ] o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2022-01-25 17:36:43 [INFO ] o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-01-25 17:36:43 [INFO ] o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2022-01-25 17:36:43 [INFO ] c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2022-01-25 17:36:43 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2022-01-25 17:36:43 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2022-01-25 17:36:43 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2022-01-25 17:36:43 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2022-01-25 17:36:44 [INFO ] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2022-01-25 17:36:44 [INFO ] c.netflix.discovery.DiscoveryClient - Disable delta property : false
2022-01-25 17:36:44 [INFO ] c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2022-01-25 17:36:44 [INFO ] c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2022-01-25 17:36:44 [INFO ] c.netflix.discovery.DiscoveryClient - Application is null : false
2022-01-25 17:36:44 [INFO ] c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2022-01-25 17:36:44 [INFO ] c.netflix.discovery.DiscoveryClient - Application version is -1: true
2022-01-25 17:36:44 [INFO ] c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2022-01-25 17:36:44 [INFO ] c.netflix.discovery.DiscoveryClient - The response status is 200
2022-01-25 17:36:44 [INFO ] c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 4
2022-01-25 17:36:44 [INFO ] c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2022-01-25 17:36:44 [INFO ] c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1643103404394 with initial instances count: 1
2022-01-25 17:36:44 [INFO ] o.s.c.n.e.s.EurekaServiceRegistry - Registering application SPRING-PLAYER-UPMS-SERVICE with eureka with status UP
2022-01-25 17:36:44 [INFO ] c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1643103404396, current=UP, previous=STARTING]
2022-01-25 17:36:44 [INFO ] c.netflix.discovery.DiscoveryClient - DiscoveryClient_SPRING-PLAYER-UPMS-SERVICE/localhost:spring-player-upms-service:5050: registering service...
2022-01-25 17:36:44 [INFO ] io.undertow - starting server: Undertow - 2.1.7.Final
2022-01-25 17:36:44 [INFO ] org.xnio - XNIO version 3.8.0.Final
2022-01-25 17:36:44 [INFO ] c.netflix.discovery.DiscoveryClient - DiscoveryClient_SPRING-PLAYER-UPMS-SERVICE/localhost:spring-player-upms-service:5050 - registration status: 204
2022-01-25 17:36:44 [INFO ] org.xnio.nio - XNIO NIO Implementation Version 3.8.0.Final
2022-01-25 17:36:44 [INFO ] org.jboss.threads - JBoss Threads version 3.1.0.Final
2022-01-25 17:36:44 [INFO ] o.s.b.w.e.undertow.UndertowWebServer - Undertow started on port(s) 5050 (http)
2022-01-25 17:36:44 [INFO ] o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 5050
2022-01-25 17:36:45 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 17:36:45 [INFO ] c.g.p.s.upms.UpmsApplication - Started UpmsApplication in 11.448 seconds (JVM running for 11.903)
2022-01-25 17:37:41 [INFO ] io.undertow.servlet - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-01-25 17:37:41 [INFO ] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-01-25 17:37:41 [INFO ] o.s.web.servlet.DispatcherServlet - Completed initialization in 10 ms
2022-01-25 17:37:41 [INFO ] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2022-01-25 17:37:41 [INFO ] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2022-01-25 17:41:44 [INFO ] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2022-01-25 17:43:40 [INFO ] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.7.Final
2022-01-25 17:43:41 [INFO ] c.g.p.s.upms.UpmsApplication - No active profile set, falling back to default profiles: default
2022-01-25 17:43:42 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-01-25 17:43:42 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-01-25 17:43:42 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19ms. Found 0 Redis repository interfaces.
2022-01-25 17:43:42 [WARN ] o.s.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2022-01-25 17:43:42 [INFO ] o.s.cloud.context.scope.GenericScope - BeanFactory id=179e77f8-092e-38dc-a319-ce434fbd3015
2022-01-25 17:43:43 [INFO ] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.github.paganini2008.springplayer.redis.RedisPubSubAutoConfiguration' of type [com.github.paganini2008.springplayer.redis.RedisPubSubAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-01-25 17:43:43 [WARN ] io.undertow.websockets.jsr - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2022-01-25 17:43:43 [INFO ] io.undertow.servlet - Initializing Spring embedded WebApplicationContext
2022-01-25 17:43:43 [INFO ] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1708 ms
2022-01-25 17:43:43 [WARN ] c.n.c.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2022-01-25 17:43:43 [INFO ] c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-01-25 17:43:43 [INFO ] c.n.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@4735d6e5
2022-01-25 17:43:45 [WARN ] c.n.c.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2022-01-25 17:43:45 [INFO ] c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-01-25 17:43:45 [INFO ] o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-01-25 17:43:46 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 17:43:48 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 17:43:48 [INFO ] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
2022-01-25 17:43:48 [WARN ] o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2022-01-25 17:43:48 [INFO ] o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-01-25 17:43:48 [INFO ] o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2022-01-25 17:43:48 [INFO ] c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2022-01-25 17:43:48 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2022-01-25 17:43:48 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2022-01-25 17:43:49 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2022-01-25 17:43:49 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2022-01-25 17:43:49 [INFO ] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2022-01-25 17:43:49 [INFO ] c.netflix.discovery.DiscoveryClient - Disable delta property : false
2022-01-25 17:43:49 [INFO ] c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2022-01-25 17:43:49 [INFO ] c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2022-01-25 17:43:49 [INFO ] c.netflix.discovery.DiscoveryClient - Application is null : false
2022-01-25 17:43:49 [INFO ] c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2022-01-25 17:43:49 [INFO ] c.netflix.discovery.DiscoveryClient - Application version is -1: true
2022-01-25 17:43:49 [INFO ] c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2022-01-25 17:43:49 [INFO ] c.netflix.discovery.DiscoveryClient - The response status is 200
2022-01-25 17:43:49 [INFO ] c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 4
2022-01-25 17:43:49 [INFO ] c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2022-01-25 17:43:49 [INFO ] c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1643103829563 with initial instances count: 2
2022-01-25 17:43:49 [INFO ] o.s.c.n.e.s.EurekaServiceRegistry - Registering application SPRING-PLAYER-UPMS-SERVICE with eureka with status UP
2022-01-25 17:43:49 [INFO ] c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1643103829565, current=UP, previous=STARTING]
2022-01-25 17:43:49 [INFO ] c.netflix.discovery.DiscoveryClient - DiscoveryClient_SPRING-PLAYER-UPMS-SERVICE/localhost:spring-player-upms-service:5050: registering service...
2022-01-25 17:43:49 [INFO ] io.undertow - starting server: Undertow - 2.1.7.Final
2022-01-25 17:43:49 [INFO ] org.xnio - XNIO version 3.8.0.Final
2022-01-25 17:43:49 [INFO ] c.netflix.discovery.DiscoveryClient - DiscoveryClient_SPRING-PLAYER-UPMS-SERVICE/localhost:spring-player-upms-service:5050 - registration status: 204
2022-01-25 17:43:49 [INFO ] org.xnio.nio - XNIO NIO Implementation Version 3.8.0.Final
2022-01-25 17:43:49 [INFO ] org.jboss.threads - JBoss Threads version 3.1.0.Final
2022-01-25 17:43:49 [INFO ] o.s.b.w.e.undertow.UndertowWebServer - Undertow started on port(s) 5050 (http)
2022-01-25 17:43:49 [INFO ] o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 5050
2022-01-25 17:43:50 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 17:43:50 [INFO ] c.g.p.s.upms.UpmsApplication - Started UpmsApplication in 12.215 seconds (JVM running for 12.669)
2022-01-25 17:44:56 [INFO ] io.undertow.servlet - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-01-25 17:44:56 [INFO ] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-01-25 17:44:56 [INFO ] o.s.web.servlet.DispatcherServlet - Completed initialization in 8 ms
2022-01-25 17:44:56 [INFO ] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2022-01-25 17:44:56 [INFO ] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2022-01-25 17:48:49 [INFO ] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2022-01-25 17:52:59 [INFO ] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.7.Final
2022-01-25 17:53:01 [INFO ] c.g.p.s.upms.UpmsApplication - No active profile set, falling back to default profiles: default
2022-01-25 17:53:01 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-01-25 17:53:01 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-01-25 17:53:01 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18ms. Found 0 Redis repository interfaces.
2022-01-25 17:53:02 [WARN ] o.s.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2022-01-25 17:53:02 [INFO ] o.s.cloud.context.scope.GenericScope - BeanFactory id=179e77f8-092e-38dc-a319-ce434fbd3015
2022-01-25 17:53:02 [INFO ] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.github.paganini2008.springplayer.redis.RedisPubSubAutoConfiguration' of type [com.github.paganini2008.springplayer.redis.RedisPubSubAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-01-25 17:53:02 [WARN ] io.undertow.websockets.jsr - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2022-01-25 17:53:02 [INFO ] io.undertow.servlet - Initializing Spring embedded WebApplicationContext
2022-01-25 17:53:02 [INFO ] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1593 ms
2022-01-25 17:53:02 [WARN ] c.n.c.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2022-01-25 17:53:02 [INFO ] c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-01-25 17:53:02 [INFO ] c.n.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@4735d6e5
2022-01-25 17:53:04 [WARN ] c.n.c.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2022-01-25 17:53:04 [INFO ] c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-01-25 17:53:04 [INFO ] o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-01-25 17:53:05 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 17:53:07 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 17:53:07 [INFO ] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
2022-01-25 17:53:07 [WARN ] o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2022-01-25 17:53:07 [INFO ] o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-01-25 17:53:07 [INFO ] o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2022-01-25 17:53:07 [INFO ] c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2022-01-25 17:53:07 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2022-01-25 17:53:07 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2022-01-25 17:53:07 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2022-01-25 17:53:07 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2022-01-25 17:53:08 [INFO ] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2022-01-25 17:53:08 [INFO ] c.netflix.discovery.DiscoveryClient - Disable delta property : false
2022-01-25 17:53:08 [INFO ] c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2022-01-25 17:53:08 [INFO ] c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2022-01-25 17:53:08 [INFO ] c.netflix.discovery.DiscoveryClient - Application is null : false
2022-01-25 17:53:08 [INFO ] c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2022-01-25 17:53:08 [INFO ] c.netflix.discovery.DiscoveryClient - Application version is -1: true
2022-01-25 17:53:08 [INFO ] c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2022-01-25 17:53:08 [INFO ] c.netflix.discovery.DiscoveryClient - The response status is 200
2022-01-25 17:53:08 [INFO ] c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 4
2022-01-25 17:53:08 [INFO ] c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2022-01-25 17:53:08 [INFO ] c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1643104388371 with initial instances count: 2
2022-01-25 17:53:08 [INFO ] o.s.c.n.e.s.EurekaServiceRegistry - Registering application SPRING-PLAYER-UPMS-SERVICE with eureka with status UP
2022-01-25 17:53:08 [INFO ] c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1643104388373, current=UP, previous=STARTING]
2022-01-25 17:53:08 [INFO ] c.netflix.discovery.DiscoveryClient - DiscoveryClient_SPRING-PLAYER-UPMS-SERVICE/localhost:spring-player-upms-service:5050: registering service...
2022-01-25 17:53:08 [INFO ] io.undertow - starting server: Undertow - 2.1.7.Final
2022-01-25 17:53:08 [INFO ] org.xnio - XNIO version 3.8.0.Final
2022-01-25 17:53:08 [INFO ] org.xnio.nio - XNIO NIO Implementation Version 3.8.0.Final
2022-01-25 17:53:08 [INFO ] c.netflix.discovery.DiscoveryClient - DiscoveryClient_SPRING-PLAYER-UPMS-SERVICE/localhost:spring-player-upms-service:5050 - registration status: 204
2022-01-25 17:53:08 [INFO ] org.jboss.threads - JBoss Threads version 3.1.0.Final
2022-01-25 17:53:08 [INFO ] o.s.b.w.e.undertow.UndertowWebServer - Undertow started on port(s) 5050 (http)
2022-01-25 17:53:08 [INFO ] o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 5050
2022-01-25 17:53:09 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 17:53:09 [INFO ] c.g.p.s.upms.UpmsApplication - Started UpmsApplication in 11.543 seconds (JVM running for 11.99)
2022-01-25 17:53:57 [INFO ] io.undertow.servlet - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-01-25 17:53:57 [INFO ] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-01-25 17:53:57 [INFO ] o.s.web.servlet.DispatcherServlet - Completed initialization in 8 ms
2022-01-25 17:53:57 [INFO ] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2022-01-25 17:53:57 [INFO ] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2022-01-25 17:58:08 [INFO ] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2022-01-25 18:03:08 [INFO ] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2022-01-25 18:04:34 [INFO ] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.7.Final
2022-01-25 18:04:35 [INFO ] c.g.p.s.upms.UpmsApplication - No active profile set, falling back to default profiles: default
2022-01-25 18:04:36 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-01-25 18:04:36 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-01-25 18:04:36 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18ms. Found 0 Redis repository interfaces.
2022-01-25 18:04:36 [WARN ] o.s.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2022-01-25 18:04:36 [INFO ] o.s.cloud.context.scope.GenericScope - BeanFactory id=179e77f8-092e-38dc-a319-ce434fbd3015
2022-01-25 18:04:36 [INFO ] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.github.paganini2008.springplayer.redis.RedisPubSubAutoConfiguration' of type [com.github.paganini2008.springplayer.redis.RedisPubSubAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-01-25 18:04:37 [WARN ] io.undertow.websockets.jsr - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2022-01-25 18:04:37 [INFO ] io.undertow.servlet - Initializing Spring embedded WebApplicationContext
2022-01-25 18:04:37 [INFO ] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1570 ms
2022-01-25 18:04:37 [WARN ] c.n.c.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2022-01-25 18:04:37 [INFO ] c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-01-25 18:04:37 [INFO ] c.n.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@4735d6e5
2022-01-25 18:04:38 [WARN ] c.n.c.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2022-01-25 18:04:38 [INFO ] c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-01-25 18:04:39 [INFO ] o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-01-25 18:04:40 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 18:04:41 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 18:04:41 [INFO ] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
2022-01-25 18:04:41 [WARN ] o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2022-01-25 18:04:41 [INFO ] o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-01-25 18:04:42 [INFO ] o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2022-01-25 18:04:42 [INFO ] c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2022-01-25 18:04:42 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2022-01-25 18:04:42 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2022-01-25 18:04:42 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2022-01-25 18:04:42 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2022-01-25 18:04:42 [INFO ] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2022-01-25 18:04:42 [INFO ] c.netflix.discovery.DiscoveryClient - Disable delta property : false
2022-01-25 18:04:42 [INFO ] c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2022-01-25 18:04:42 [INFO ] c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2022-01-25 18:04:42 [INFO ] c.netflix.discovery.DiscoveryClient - Application is null : false
2022-01-25 18:04:42 [INFO ] c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2022-01-25 18:04:42 [INFO ] c.netflix.discovery.DiscoveryClient - Application version is -1: true
2022-01-25 18:04:42 [INFO ] c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2022-01-25 18:04:42 [INFO ] c.netflix.discovery.DiscoveryClient - The response status is 200
2022-01-25 18:04:42 [INFO ] c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 4
2022-01-25 18:04:42 [INFO ] c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2022-01-25 18:04:42 [INFO ] c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1643105082784 with initial instances count: 0
2022-01-25 18:04:42 [INFO ] o.s.c.n.e.s.EurekaServiceRegistry - Registering application SPRING-PLAYER-UPMS-SERVICE with eureka with status UP
2022-01-25 18:04:42 [INFO ] c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1643105082787, current=UP, previous=STARTING]
2022-01-25 18:04:42 [INFO ] c.netflix.discovery.DiscoveryClient - DiscoveryClient_SPRING-PLAYER-UPMS-SERVICE/localhost:spring-player-upms-service:5050: registering service...
2022-01-25 18:04:42 [INFO ] io.undertow - starting server: Undertow - 2.1.7.Final
2022-01-25 18:04:42 [INFO ] org.xnio - XNIO version 3.8.0.Final
2022-01-25 18:04:42 [INFO ] org.xnio.nio - XNIO NIO Implementation Version 3.8.0.Final
2022-01-25 18:04:42 [INFO ] c.netflix.discovery.DiscoveryClient - DiscoveryClient_SPRING-PLAYER-UPMS-SERVICE/localhost:spring-player-upms-service:5050 - registration status: 204
2022-01-25 18:04:42 [INFO ] org.jboss.threads - JBoss Threads version 3.1.0.Final
2022-01-25 18:04:42 [INFO ] o.s.b.w.e.undertow.UndertowWebServer - Undertow started on port(s) 5050 (http)
2022-01-25 18:04:42 [INFO ] o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 5050
2022-01-25 18:04:43 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 18:04:44 [INFO ] c.g.p.s.upms.UpmsApplication - Started UpmsApplication in 11.368 seconds (JVM running for 11.806)
2022-01-25 18:04:50 [INFO ] c.netflix.discovery.DiscoveryClient - Disable delta property : false
2022-01-25 18:04:50 [INFO ] c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2022-01-25 18:04:50 [INFO ] c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2022-01-25 18:04:50 [INFO ] c.netflix.discovery.DiscoveryClient - Application is null : false
2022-01-25 18:04:50 [INFO ] c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2022-01-25 18:04:50 [INFO ] c.netflix.discovery.DiscoveryClient - Application version is -1: false
2022-01-25 18:04:50 [INFO ] c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2022-01-25 18:04:50 [INFO ] c.netflix.discovery.DiscoveryClient - The response status is 200
2022-01-25 18:05:23 [INFO ] io.undertow.servlet - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-01-25 18:05:23 [INFO ] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-01-25 18:05:23 [INFO ] o.s.web.servlet.DispatcherServlet - Completed initialization in 7 ms
2022-01-25 18:05:23 [INFO ] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2022-01-25 18:05:23 [INFO ] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2022-01-25 18:09:42 [INFO ] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2022-01-25 18:13:01 [INFO ] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.7.Final
2022-01-25 18:13:03 [INFO ] c.g.p.s.upms.UpmsApplication - No active profile set, falling back to default profiles: default
2022-01-25 18:13:04 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-01-25 18:13:04 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-01-25 18:13:04 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 21ms. Found 0 Redis repository interfaces.
2022-01-25 18:13:04 [WARN ] o.s.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2022-01-25 18:13:04 [INFO ] o.s.cloud.context.scope.GenericScope - BeanFactory id=179e77f8-092e-38dc-a319-ce434fbd3015
2022-01-25 18:13:04 [INFO ] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.github.paganini2008.springplayer.redis.RedisPubSubAutoConfiguration' of type [com.github.paganini2008.springplayer.redis.RedisPubSubAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-01-25 18:13:05 [WARN ] io.undertow.websockets.jsr - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2022-01-25 18:13:05 [INFO ] io.undertow.servlet - Initializing Spring embedded WebApplicationContext
2022-01-25 18:13:05 [INFO ] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1900 ms
2022-01-25 18:13:05 [WARN ] c.n.c.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2022-01-25 18:13:05 [INFO ] c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-01-25 18:13:05 [INFO ] c.n.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@36dafa24
2022-01-25 18:13:07 [WARN ] c.n.c.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2022-01-25 18:13:07 [INFO ] c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-01-25 18:13:07 [INFO ] o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-01-25 18:13:09 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 18:13:10 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 18:13:10 [INFO ] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
2022-01-25 18:13:10 [WARN ] o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2022-01-25 18:13:10 [INFO ] o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-01-25 18:13:10 [INFO ] o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2022-01-25 18:13:10 [INFO ] c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2022-01-25 18:13:10 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2022-01-25 18:13:10 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2022-01-25 18:13:11 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2022-01-25 18:13:11 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2022-01-25 18:13:11 [INFO ] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2022-01-25 18:13:11 [INFO ] c.netflix.discovery.DiscoveryClient - Disable delta property : false
2022-01-25 18:13:11 [INFO ] c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2022-01-25 18:13:11 [INFO ] c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2022-01-25 18:13:11 [INFO ] c.netflix.discovery.DiscoveryClient - Application is null : false
2022-01-25 18:13:11 [INFO ] c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2022-01-25 18:13:11 [INFO ] c.netflix.discovery.DiscoveryClient - Application version is -1: true
2022-01-25 18:13:11 [INFO ] c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2022-01-25 18:13:11 [INFO ] c.netflix.discovery.DiscoveryClient - The response status is 200
2022-01-25 18:13:11 [INFO ] c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 4
2022-01-25 18:13:11 [INFO ] c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2022-01-25 18:13:11 [INFO ] c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1643105591648 with initial instances count: 0
2022-01-25 18:13:11 [INFO ] o.s.c.n.e.s.EurekaServiceRegistry - Registering application SPRING-PLAYER-UPMS-SERVICE with eureka with status UP
2022-01-25 18:13:11 [INFO ] c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1643105591652, current=UP, previous=STARTING]
2022-01-25 18:13:11 [INFO ] c.netflix.discovery.DiscoveryClient - DiscoveryClient_SPRING-PLAYER-UPMS-SERVICE/localhost:spring-player-upms-service:5050: registering service...
2022-01-25 18:13:11 [INFO ] io.undertow - starting server: Undertow - 2.1.7.Final
2022-01-25 18:13:11 [INFO ] org.xnio - XNIO version 3.8.0.Final
2022-01-25 18:13:11 [INFO ] org.xnio.nio - XNIO NIO Implementation Version 3.8.0.Final
2022-01-25 18:13:11 [INFO ] c.netflix.discovery.DiscoveryClient - DiscoveryClient_SPRING-PLAYER-UPMS-SERVICE/localhost:spring-player-upms-service:5050 - registration status: 204
2022-01-25 18:13:11 [INFO ] org.jboss.threads - JBoss Threads version 3.1.0.Final
2022-01-25 18:13:11 [INFO ] o.s.b.w.e.undertow.UndertowWebServer - Undertow started on port(s) 5050 (http)
2022-01-25 18:13:11 [INFO ] o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 5050
2022-01-25 18:13:12 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 18:13:13 [INFO ] c.g.p.s.upms.UpmsApplication - Started UpmsApplication in 12.939 seconds (JVM running for 13.676)
2022-01-25 18:13:19 [INFO ] c.netflix.discovery.DiscoveryClient - Disable delta property : false
2022-01-25 18:13:19 [INFO ] c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2022-01-25 18:13:19 [INFO ] c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2022-01-25 18:13:19 [INFO ] c.netflix.discovery.DiscoveryClient - Application is null : false
2022-01-25 18:13:19 [INFO ] c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2022-01-25 18:13:19 [INFO ] c.netflix.discovery.DiscoveryClient - Application version is -1: false
2022-01-25 18:13:19 [INFO ] c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2022-01-25 18:13:19 [INFO ] c.netflix.discovery.DiscoveryClient - The response status is 200
2022-01-25 18:13:53 [INFO ] io.undertow.servlet - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-01-25 18:13:53 [INFO ] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-01-25 18:13:53 [INFO ] o.s.web.servlet.DispatcherServlet - Completed initialization in 9 ms
2022-01-25 18:13:53 [INFO ] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2022-01-25 18:13:53 [INFO ] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2022-01-25 18:18:03 [INFO ] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.7.Final
2022-01-25 18:18:04 [INFO ] c.g.p.s.upms.UpmsApplication - No active profile set, falling back to default profiles: default
2022-01-25 18:18:05 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-01-25 18:18:05 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-01-25 18:18:05 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19ms. Found 0 Redis repository interfaces.
2022-01-25 18:18:05 [WARN ] o.s.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2022-01-25 18:18:05 [INFO ] o.s.cloud.context.scope.GenericScope - BeanFactory id=179e77f8-092e-38dc-a319-ce434fbd3015
2022-01-25 18:18:06 [INFO ] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.github.paganini2008.springplayer.redis.RedisPubSubAutoConfiguration' of type [com.github.paganini2008.springplayer.redis.RedisPubSubAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-01-25 18:18:06 [WARN ] io.undertow.websockets.jsr - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2022-01-25 18:18:06 [INFO ] io.undertow.servlet - Initializing Spring embedded WebApplicationContext
2022-01-25 18:18:06 [INFO ] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1558 ms
2022-01-25 18:18:06 [WARN ] c.n.c.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2022-01-25 18:18:06 [INFO ] c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-01-25 18:18:06 [INFO ] c.n.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@4735d6e5
2022-01-25 18:18:08 [WARN ] c.n.c.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2022-01-25 18:18:08 [INFO ] c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-01-25 18:18:08 [INFO ] o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-01-25 18:18:09 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 18:18:11 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 18:18:11 [INFO ] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
2022-01-25 18:18:11 [WARN ] o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2022-01-25 18:18:11 [INFO ] o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-01-25 18:18:11 [INFO ] o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2022-01-25 18:18:11 [INFO ] c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2022-01-25 18:18:11 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2022-01-25 18:18:11 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2022-01-25 18:18:11 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2022-01-25 18:18:11 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2022-01-25 18:18:11 [INFO ] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2022-01-25 18:18:11 [INFO ] c.netflix.discovery.DiscoveryClient - Disable delta property : false
2022-01-25 18:18:11 [INFO ] c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2022-01-25 18:18:11 [INFO ] c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2022-01-25 18:18:11 [INFO ] c.netflix.discovery.DiscoveryClient - Application is null : false
2022-01-25 18:18:11 [INFO ] c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2022-01-25 18:18:11 [INFO ] c.netflix.discovery.DiscoveryClient - Application version is -1: true
2022-01-25 18:18:11 [INFO ] c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2022-01-25 18:18:12 [INFO ] c.netflix.discovery.DiscoveryClient - The response status is 200
2022-01-25 18:18:12 [INFO ] c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 4
2022-01-25 18:18:12 [INFO ] c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2022-01-25 18:18:12 [INFO ] c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1643105892074 with initial instances count: 3
2022-01-25 18:18:12 [INFO ] o.s.c.n.e.s.EurekaServiceRegistry - Registering application SPRING-PLAYER-UPMS-SERVICE with eureka with status UP
2022-01-25 18:18:12 [INFO ] c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1643105892076, current=UP, previous=STARTING]
2022-01-25 18:18:12 [INFO ] c.netflix.discovery.DiscoveryClient - DiscoveryClient_SPRING-PLAYER-UPMS-SERVICE/localhost:spring-player-upms-service:5050: registering service...
2022-01-25 18:18:12 [INFO ] io.undertow - starting server: Undertow - 2.1.7.Final
2022-01-25 18:18:12 [INFO ] org.xnio - XNIO version 3.8.0.Final
2022-01-25 18:18:12 [INFO ] c.netflix.discovery.DiscoveryClient - DiscoveryClient_SPRING-PLAYER-UPMS-SERVICE/localhost:spring-player-upms-service:5050 - registration status: 204
2022-01-25 18:18:12 [INFO ] org.xnio.nio - XNIO NIO Implementation Version 3.8.0.Final
2022-01-25 18:18:12 [INFO ] org.jboss.threads - JBoss Threads version 3.1.0.Final
2022-01-25 18:18:12 [INFO ] o.s.b.w.e.undertow.UndertowWebServer - Undertow started on port(s) 5050 (http)
2022-01-25 18:18:12 [INFO ] o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 5050
2022-01-25 18:18:13 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 18:18:13 [INFO ] c.g.p.s.upms.UpmsApplication - Started UpmsApplication in 11.49 seconds (JVM running for 11.928)
2022-01-25 18:18:54 [INFO ] io.undertow.servlet - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-01-25 18:18:54 [INFO ] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-01-25 18:18:54 [INFO ] o.s.web.servlet.DispatcherServlet - Completed initialization in 7 ms
2022-01-25 18:18:55 [INFO ] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2022-01-25 18:18:55 [INFO ] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2022-01-25 18:22:01 [INFO ] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.7.Final
2022-01-25 18:22:02 [INFO ] c.g.p.s.upms.UpmsApplication - No active profile set, falling back to default profiles: default
2022-01-25 18:22:03 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-01-25 18:22:03 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-01-25 18:22:03 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19ms. Found 0 Redis repository interfaces.
2022-01-25 18:22:03 [WARN ] o.s.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2022-01-25 18:22:03 [INFO ] o.s.cloud.context.scope.GenericScope - BeanFactory id=179e77f8-092e-38dc-a319-ce434fbd3015
2022-01-25 18:22:04 [INFO ] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.github.paganini2008.springplayer.redis.RedisPubSubAutoConfiguration' of type [com.github.paganini2008.springplayer.redis.RedisPubSubAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-01-25 18:22:04 [WARN ] io.undertow.websockets.jsr - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2022-01-25 18:22:04 [INFO ] io.undertow.servlet - Initializing Spring embedded WebApplicationContext
2022-01-25 18:22:04 [INFO ] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1550 ms
2022-01-25 18:22:04 [WARN ] c.n.c.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2022-01-25 18:22:04 [INFO ] c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-01-25 18:22:04 [INFO ] c.n.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@4735d6e5
2022-01-25 18:22:05 [WARN ] c.n.c.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2022-01-25 18:22:05 [INFO ] c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-01-25 18:22:06 [INFO ] o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-01-25 18:22:07 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 18:22:09 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 18:22:09 [INFO ] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
2022-01-25 18:22:09 [WARN ] o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2022-01-25 18:22:09 [INFO ] o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-01-25 18:22:09 [INFO ] o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2022-01-25 18:22:09 [INFO ] c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2022-01-25 18:22:09 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2022-01-25 18:22:09 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2022-01-25 18:22:09 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2022-01-25 18:22:09 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2022-01-25 18:22:09 [INFO ] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2022-01-25 18:22:09 [INFO ] c.netflix.discovery.DiscoveryClient - Disable delta property : false
2022-01-25 18:22:09 [INFO ] c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2022-01-25 18:22:09 [INFO ] c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2022-01-25 18:22:09 [INFO ] c.netflix.discovery.DiscoveryClient - Application is null : false
2022-01-25 18:22:09 [INFO ] c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2022-01-25 18:22:09 [INFO ] c.netflix.discovery.DiscoveryClient - Application version is -1: true
2022-01-25 18:22:09 [INFO ] c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2022-01-25 18:22:09 [INFO ] c.netflix.discovery.DiscoveryClient - The response status is 200
2022-01-25 18:22:09 [INFO ] c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 4
2022-01-25 18:22:09 [INFO ] c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2022-01-25 18:22:09 [INFO ] c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1643106129942 with initial instances count: 0
2022-01-25 18:22:09 [INFO ] o.s.c.n.e.s.EurekaServiceRegistry - Registering application SPRING-PLAYER-UPMS-SERVICE with eureka with status UP
2022-01-25 18:22:09 [INFO ] c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1643106129946, current=UP, previous=STARTING]
2022-01-25 18:22:09 [INFO ] c.netflix.discovery.DiscoveryClient - DiscoveryClient_SPRING-PLAYER-UPMS-SERVICE/localhost:spring-player-upms-service:5050: registering service...
2022-01-25 18:22:09 [INFO ] io.undertow - starting server: Undertow - 2.1.7.Final
2022-01-25 18:22:09 [INFO ] org.xnio - XNIO version 3.8.0.Final
2022-01-25 18:22:10 [INFO ] org.xnio.nio - XNIO NIO Implementation Version 3.8.0.Final
2022-01-25 18:22:10 [INFO ] c.netflix.discovery.DiscoveryClient - DiscoveryClient_SPRING-PLAYER-UPMS-SERVICE/localhost:spring-player-upms-service:5050 - registration status: 204
2022-01-25 18:22:10 [INFO ] org.jboss.threads - JBoss Threads version 3.1.0.Final
2022-01-25 18:22:10 [INFO ] o.s.b.w.e.undertow.UndertowWebServer - Undertow started on port(s) 5050 (http)
2022-01-25 18:22:10 [INFO ] o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 5050
2022-01-25 18:22:11 [INFO ] o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2022-01-25 18:22:11 [INFO ] c.g.p.s.upms.UpmsApplication - Started UpmsApplication in 11.421 seconds (JVM running for 11.856)
2022-01-25 18:22:17 [INFO ] c.netflix.discovery.DiscoveryClient - Disable delta property : false
2022-01-25 18:22:17 [INFO ] c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2022-01-25 18:22:17 [INFO ] c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2022-01-25 18:22:17 [INFO ] c.netflix.discovery.DiscoveryClient - Application is null : false
2022-01-25 18:22:17 [INFO ] c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2022-01-25 18:22:17 [INFO ] c.netflix.discovery.DiscoveryClient - Application version is -1: false
2022-01-25 18:22:17 [INFO ] c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2022-01-25 18:22:17 [INFO ] c.netflix.discovery.DiscoveryClient - The response status is 200
2022-01-25 18:22:54 [INFO ] io.undertow.servlet - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-01-25 18:22:54 [INFO ] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-01-25 18:22:54 [INFO ] o.s.web.servlet.DispatcherServlet - Completed initialization in 8 ms
2022-01-25 18:22:54 [INFO ] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2022-01-25 18:22:54 [INFO ] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2022-01-25 18:27:09 [INFO ] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2022-01-25 18:32:09 [INFO ] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2022-01-25 23:46:25 [INFO ] o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.7.Final
2022-01-25 23:46:26 [INFO ] c.g.p.s.upms.UpmsApplication - No active profile set, falling back to default profiles: default
2022-01-25 23:46:28 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-01-25 23:46:28 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-01-25 23:46:28 [INFO ] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 22ms. Found 0 Redis repository interfaces.
2022-01-25 23:46:28 [WARN ] o.s.boot.actuate.endpoint.EndpointId - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2022-01-25 23:46:28 [INFO ] o.s.cloud.context.scope.GenericScope - BeanFactory id=179e77f8-092e-38dc-a319-ce434fbd3015
2022-01-25 23:46:29 [INFO ] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.github.paganini2008.springplayer.redis.RedisPubSubAutoConfiguration' of type [com.github.paganini2008.springplayer.redis.RedisPubSubAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-01-25 23:46:29 [WARN ] io.undertow.websockets.jsr - UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2022-01-25 23:46:29 [INFO ] io.undertow.servlet - Initializing Spring embedded WebApplicationContext
2022-01-25 23:46:29 [INFO ] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2972 ms
2022-01-25 23:46:29 [WARN ] c.n.c.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2022-01-25 23:46:29 [INFO ] c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-01-25 23:46:30 [INFO ] c.n.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@4735d6e5
2022-01-25 23:46:36 [WARN ] c.n.c.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
2022-01-25 23:46:36 [INFO ] c.n.c.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2022-01-25 23:46:36 [INFO ] o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2022-01-25 23:46:38 [INFO ] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
2022-01-25 23:46:38 [WARN ] o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2022-01-25 23:46:38 [INFO ] o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoint(s) beneath base path '/actuator'
2022-01-25 23:46:38 [INFO ] o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2022-01-25 23:46:38 [INFO ] c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2022-01-25 23:46:39 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
2022-01-25 23:46:39 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
2022-01-25 23:46:39 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
2022-01-25 23:46:39 [INFO ] c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
2022-01-25 23:46:39 [INFO ] c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2022-01-25 23:46:39 [INFO ] c.netflix.discovery.DiscoveryClient - Disable delta property : false
2022-01-25 23:46:39 [INFO ] c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2022-01-25 23:46:39 [INFO ] c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2022-01-25 23:46:39 [INFO ] c.netflix.discovery.DiscoveryClient - Application is null : false
2022-01-25 23:46:39 [INFO ] c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2022-01-25 23:46:39 [INFO ] c.netflix.discovery.DiscoveryClient - Application version is -1: true
2022-01-25 23:46:39 [INFO ] c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2022-01-25 23:46:40 [INFO ] c.netflix.discovery.DiscoveryClient - The response status is 200
2022-01-25 23:46:40 [INFO ] c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 4
2022-01-25 23:46:40 [INFO ] c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2022-01-25 23:46:40 [INFO ] c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1643125600379 with initial instances count: 0
2022-01-25 23:46:40 [INFO ] o.s.c.n.e.s.EurekaServiceRegistry - Registering application SPRING-PLAYER-UPMS-SERVICE with eureka with status UP
2022-01-25 23:46:40 [INFO ] c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1643125600383, current=UP, previous=STARTING]
2022-01-25 23:46:40 [INFO ] c.netflix.discovery.DiscoveryClient - DiscoveryClient_SPRING-PLAYER-UPMS-SERVICE/DESKTOP-JVEFRNA:spring-player-upms-service:5050: registering service...
2022-01-25 23:46:40 [INFO ] io.undertow - starting server: Undertow - 2.1.7.Final
2022-01-25 23:46:40 [INFO ] org.xnio - XNIO version 3.8.0.Final
2022-01-25 23:46:40 [INFO ] org.xnio.nio - XNIO NIO Implementation Version 3.8.0.Final
2022-01-25 23:46:40 [INFO ] org.jboss.threads - JBoss Threads version 3.1.0.Final
2022-01-25 23:46:40 [INFO ] o.s.b.w.e.undertow.UndertowWebServer - Undertow started on port(s) 5050 (http)
2022-01-25 23:46:40 [INFO ] o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 5050
2022-01-25 23:46:40 [INFO ] c.netflix.discovery.DiscoveryClient - DiscoveryClient_SPRING-PLAYER-UPMS-SERVICE/DESKTOP-JVEFRNA:spring-player-upms-service:5050 - registration status: 204
2022-01-25 23:46:41 [INFO ] c.g.p.s.upms.UpmsApplication - Started UpmsApplication in 16.465 seconds (JVM running for 17.552)
2022-01-25 23:46:48 [INFO ] c.netflix.discovery.DiscoveryClient - Disable delta property : false
2022-01-25 23:46:48 [INFO ] c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2022-01-25 23:46:48 [INFO ] c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2022-01-25 23:46:48 [INFO ] c.netflix.discovery.DiscoveryClient - Application is null : false
2022-01-25 23:46:48 [INFO ] c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2022-01-25 23:46:48 [INFO ] c.netflix.discovery.DiscoveryClient - Application version is -1: false
2022-01-25 23:46:48 [INFO ] c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2022-01-25 23:46:48 [INFO ] c.netflix.discovery.DiscoveryClient - The response status is 200
2022-01-25 23:47:11 [INFO ] io.undertow.servlet - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-01-25 23:47:11 [INFO ] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-01-25 23:47:11 [INFO ] o.s.web.servlet.DispatcherServlet - Completed initialization in 13 ms
2022-01-25 23:47:11 [INFO ] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2022-01-25 23:47:11 [INFO ] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
